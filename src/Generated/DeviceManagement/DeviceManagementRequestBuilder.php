<?php

namespace Microsoft\Graph\Beta\Generated\DeviceManagement;

use Exception;
use Http\Promise\Promise;
use Http\Promise\RejectedPromise;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AdvancedThreatProtectionOnboardingStateSummary\AdvancedThreatProtectionOnboardingStateSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidDeviceOwnerEnrollmentProfiles\AndroidDeviceOwnerEnrollmentProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidDeviceOwnerEnrollmentProfiles\Item\AndroidDeviceOwnerEnrollmentProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidForWorkAppConfigurationSchemas\AndroidForWorkAppConfigurationSchemasRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidForWorkAppConfigurationSchemas\Item\AndroidForWorkAppConfigurationSchemaItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidForWorkEnrollmentProfiles\AndroidForWorkEnrollmentProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidForWorkEnrollmentProfiles\Item\AndroidForWorkEnrollmentProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidForWorkSettings\AndroidForWorkSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidManagedStoreAccountEnterpriseSettings\AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidManagedStoreAppConfigurationSchemas\AndroidManagedStoreAppConfigurationSchemasRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AndroidManagedStoreAppConfigurationSchemas\Item\AndroidManagedStoreAppConfigurationSchemaItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ApplePushNotificationCertificate\ApplePushNotificationCertificateRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AppleUserInitiatedEnrollmentProfiles\AppleUserInitiatedEnrollmentProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AppleUserInitiatedEnrollmentProfiles\Item\AppleUserInitiatedEnrollmentProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AssignmentFilters\AssignmentFiltersRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AssignmentFilters\Item\DeviceAndAppManagementAssignmentFilterItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AuditEvents\AuditEventsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AuditEvents\Item\AuditEventItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AutopilotEvents\AutopilotEventsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\AutopilotEvents\Item\DeviceManagementAutopilotEventItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CartToClassAssociations\CartToClassAssociationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CartToClassAssociations\Item\CartToClassAssociationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Categories\CategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Categories\Item\DeviceManagementSettingCategoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CertificateConnectorDetails\CertificateConnectorDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CertificateConnectorDetails\Item\CertificateConnectorDetailsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ChromeOSOnboardingSettings\ChromeOSOnboardingSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ChromeOSOnboardingSettings\Item\ChromeOSOnboardingSettingsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CloudPCConnectivityIssues\CloudPCConnectivityIssuesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CloudPCConnectivityIssues\Item\CloudPCConnectivityIssueItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagedDevices\ComanagedDevicesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagementEligibleDevices\ComanagementEligibleDevicesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagementEligibleDevices\Item\ComanagementEligibleDeviceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceCategories\ComplianceCategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceManagementPartners\ComplianceManagementPartnersRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceManagementPartners\Item\ComplianceManagementPartnerItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CompliancePolicies\CompliancePoliciesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\CompliancePolicies\Item\DeviceManagementCompliancePolicyItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceSettings\ComplianceSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConditionalAccessSettings\ConditionalAccessSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigManagerCollections\ConfigManagerCollectionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigManagerCollections\Item\ConfigManagerCollectionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationCategories\ConfigurationCategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationPolicies\ConfigurationPoliciesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationPolicies\Item\DeviceManagementConfigurationPolicyItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationPolicyTemplates\ConfigurationPolicyTemplatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationPolicyTemplates\Item\DeviceManagementConfigurationPolicyTemplateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationSettings\ConfigurationSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DataSharingConsents\DataSharingConsentsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DataSharingConsents\Item\DataSharingConsentItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DepOnboardingSettings\DepOnboardingSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DepOnboardingSettings\Item\DepOnboardingSettingItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DerivedCredentials\DerivedCredentialsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DerivedCredentials\Item\DeviceManagementDerivedCredentialSettingsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DetectedApps\DetectedAppsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DetectedApps\Item\DetectedAppItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCategories\DeviceCategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCategories\Item\DeviceCategoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCompliancePolicies\DeviceCompliancePoliciesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCompliancePolicies\Item\DeviceCompliancePolicyItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCompliancePolicyDeviceStateSummary\DeviceCompliancePolicyDeviceStateSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCompliancePolicySettingStateSummaries\DeviceCompliancePolicySettingStateSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCompliancePolicySettingStateSummaries\Item\DeviceCompliancePolicySettingStateSummaryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceComplianceScripts\DeviceComplianceScriptsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceComplianceScripts\Item\DeviceComplianceScriptItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationConflictSummary\DeviceConfigurationConflictSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationConflictSummary\Item\DeviceConfigurationConflictSummaryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationDeviceStateSummaries\DeviceConfigurationDeviceStateSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationRestrictedAppsViolations\DeviceConfigurationRestrictedAppsViolationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationRestrictedAppsViolations\Item\RestrictedAppsViolationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurations\DeviceConfigurationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurations\Item\DeviceConfigurationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationsAllManagedDeviceCertificateStates\DeviceConfigurationsAllManagedDeviceCertificateStatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationsAllManagedDeviceCertificateStates\Item\ManagedAllDeviceCertificateStateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceConfigurationUserStateSummaries\DeviceConfigurationUserStateSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCustomAttributeShellScripts\DeviceCustomAttributeShellScriptsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceCustomAttributeShellScripts\Item\DeviceCustomAttributeShellScriptItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceEnrollmentConfigurations\DeviceEnrollmentConfigurationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceEnrollmentConfigurations\Item\DeviceEnrollmentConfigurationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceHealthScripts\DeviceHealthScriptsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceHealthScripts\Item\DeviceHealthScriptItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceManagementPartners\DeviceManagementPartnersRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceManagementPartners\Item\DeviceManagementPartnerItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceManagementScripts\DeviceManagementScriptsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceManagementScripts\Item\DeviceManagementScriptItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceShellScripts\DeviceShellScriptsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DeviceShellScripts\Item\DeviceShellScriptItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DomainJoinConnectors\DomainJoinConnectorsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\DomainJoinConnectors\Item\DeviceManagementDomainJoinConnectorItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EmbeddedSIMActivationCodePools\EmbeddedSIMActivationCodePoolsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EmbeddedSIMActivationCodePools\Item\EmbeddedSIMActivationCodePoolItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EnableAndroidDeviceAdministratorEnrollment\EnableAndroidDeviceAdministratorEnrollmentRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EnableLegacyPcManagement\EnableLegacyPcManagementRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EnableUnlicensedAdminstrators\EnableUnlicensedAdminstratorsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\EvaluateAssignmentFilter\EvaluateAssignmentFilterRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ExchangeConnectors\ExchangeConnectorsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ExchangeConnectors\Item\DeviceManagementExchangeConnectorItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ExchangeOnPremisesPolicies\ExchangeOnPremisesPoliciesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ExchangeOnPremisesPolicies\Item\DeviceManagementExchangeOnPremisesPolicyItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ExchangeOnPremisesPolicy\ExchangeOnPremisesPolicyRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetAssignedRoleDetails\GetAssignedRoleDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetAssignmentFiltersStatusDetails\GetAssignmentFiltersStatusDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetComanagedDevicesSummary\GetComanagedDevicesSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetComanagementEligibleDevicesSummary\GetComanagementEligibleDevicesSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetEffectivePermissions\GetEffectivePermissionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetEffectivePermissionsWithScope\GetEffectivePermissionsWithScopeRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetRoleScopeTagsByIdsWithIds\GetRoleScopeTagsByIdsWithIdsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetRoleScopeTagsByResourceWithResource\GetRoleScopeTagsByResourceWithResourceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GetSuggestedEnrollmentLimitWithEnrollmentType\GetSuggestedEnrollmentLimitWithEnrollmentTypeRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyCategories\GroupPolicyCategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyCategories\Item\GroupPolicyCategoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyConfigurations\GroupPolicyConfigurationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyConfigurations\Item\GroupPolicyConfigurationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyDefinitionFiles\GroupPolicyDefinitionFilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyDefinitionFiles\Item\GroupPolicyDefinitionFileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyDefinitions\GroupPolicyDefinitionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyDefinitions\Item\GroupPolicyDefinitionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyMigrationReports\GroupPolicyMigrationReportsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyMigrationReports\Item\GroupPolicyMigrationReportItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyObjectFiles\GroupPolicyObjectFilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyObjectFiles\Item\GroupPolicyObjectFileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyUploadedDefinitionFiles\GroupPolicyUploadedDefinitionFilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\GroupPolicyUploadedDefinitionFiles\Item\GroupPolicyUploadedDefinitionFileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ImportedDeviceIdentities\ImportedDeviceIdentitiesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ImportedDeviceIdentities\Item\ImportedDeviceIdentityItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ImportedWindowsAutopilotDeviceIdentities\ImportedWindowsAutopilotDeviceIdentitiesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ImportedWindowsAutopilotDeviceIdentities\Item\ImportedWindowsAutopilotDeviceIdentityItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Intents\IntentsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Intents\Item\DeviceManagementIntentItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\IntuneBrandingProfiles\IntuneBrandingProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\IntuneBrandingProfiles\Item\IntuneBrandingProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\IosUpdateStatuses\IosUpdateStatusesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\IosUpdateStatuses\Item\IosUpdateDeviceStatusItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MacOSSoftwareUpdateAccountSummaries\Item\MacOSSoftwareUpdateAccountSummaryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MacOSSoftwareUpdateAccountSummaries\MacOSSoftwareUpdateAccountSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDeviceEncryptionStates\Item\ManagedDeviceEncryptionStateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDeviceEncryptionStates\ManagedDeviceEncryptionStatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDeviceOverview\ManagedDeviceOverviewRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDevices\ManagedDevicesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelConfigurations\Item\MicrosoftTunnelConfigurationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelConfigurations\MicrosoftTunnelConfigurationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelHealthThresholds\Item\MicrosoftTunnelHealthThresholdItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelHealthThresholds\MicrosoftTunnelHealthThresholdsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelServerLogCollectionResponses\Item\MicrosoftTunnelServerLogCollectionResponseItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelServerLogCollectionResponses\MicrosoftTunnelServerLogCollectionResponsesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelSites\Item\MicrosoftTunnelSiteItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MicrosoftTunnelSites\MicrosoftTunnelSitesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MobileAppTroubleshootingEvents\Item\MobileAppTroubleshootingEventItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MobileAppTroubleshootingEvents\MobileAppTroubleshootingEventsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MobileThreatDefenseConnectors\Item\MobileThreatDefenseConnectorItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\MobileThreatDefenseConnectors\MobileThreatDefenseConnectorsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Monitoring\MonitoringRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\NdesConnectors\Item\NdesConnectorItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\NdesConnectors\NdesConnectorsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\NotificationMessageTemplates\Item\NotificationMessageTemplateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\NotificationMessageTemplates\NotificationMessageTemplatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\OemWarrantyInformationOnboarding\Item\OemWarrantyInformationOnboardingItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\OemWarrantyInformationOnboarding\OemWarrantyInformationOnboardingRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RemoteActionAudits\Item\RemoteActionAuditItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RemoteActionAudits\RemoteActionAuditsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RemoteAssistancePartners\Item\RemoteAssistancePartnerItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RemoteAssistancePartners\RemoteAssistancePartnersRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RemoteAssistanceSettings\RemoteAssistanceSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Reports\ReportsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ResourceAccessProfiles\Item\DeviceManagementResourceAccessProfileBaseItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ResourceAccessProfiles\ResourceAccessProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ResourceOperations\Item\ResourceOperationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ResourceOperations\ResourceOperationsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ReusablePolicySettings\Item\DeviceManagementReusablePolicySettingItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ReusablePolicySettings\ReusablePolicySettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ReusableSettings\ReusableSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleAssignments\Item\DeviceAndAppManagementRoleAssignmentItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleAssignments\RoleAssignmentsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleDefinitions\Item\RoleDefinitionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleDefinitions\RoleDefinitionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleScopeTags\Item\RoleScopeTagItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\RoleScopeTags\RoleScopeTagsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ScopedForResourceWithResource\ScopedForResourceWithResourceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\SendCustomNotificationToCompanyPortal\SendCustomNotificationToCompanyPortalRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\SettingDefinitions\Item\DeviceManagementSettingDefinitionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\SettingDefinitions\SettingDefinitionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\SoftwareUpdateStatusSummary\SoftwareUpdateStatusSummaryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TelecomExpenseManagementPartners\Item\TelecomExpenseManagementPartnerItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TelecomExpenseManagementPartners\TelecomExpenseManagementPartnersRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Templates\Item\DeviceManagementTemplateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\Templates\TemplatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TemplateSettings\Item\DeviceManagementConfigurationSettingTemplateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TemplateSettings\TemplateSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TenantAttachRBAC\TenantAttachRBACRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TermsAndConditions\Item\TermsAndConditionsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TermsAndConditions\TermsAndConditionsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TroubleshootingEvents\Item\DeviceManagementTroubleshootingEventItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\TroubleshootingEvents\TroubleshootingEventsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAnomaly\Item\UserExperienceAnalyticsAnomalyItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAnomaly\UserExperienceAnalyticsAnomalyRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAnomalyDevice\Item\UserExperienceAnalyticsAnomalyDeviceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAnomalyDevice\UserExperienceAnalyticsAnomalyDeviceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformance\Item\UserExperienceAnalyticsAppHealthApplicationPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformance\UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion\Item\UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails\Item\UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId\Item\UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIdItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId\UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion\Item\UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion\UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDeviceModelPerformance\Item\UserExperienceAnalyticsAppHealthDeviceModelPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDeviceModelPerformance\UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDevicePerformance\Item\UserExperienceAnalyticsAppHealthDevicePerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDevicePerformance\UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDevicePerformanceDetails\Item\UserExperienceAnalyticsAppHealthDevicePerformanceDetailsItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthDevicePerformanceDetails\UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthOSVersionPerformance\Item\UserExperienceAnalyticsAppHealthOSVersionPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthOSVersionPerformance\UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsAppHealthOverview\UserExperienceAnalyticsAppHealthOverviewRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBaselines\Item\UserExperienceAnalyticsBaselineItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBaselines\UserExperienceAnalyticsBaselinesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthAppImpact\Item\UserExperienceAnalyticsBatteryHealthAppImpactItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthAppImpact\UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthCapacityDetails\UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDeviceAppImpact\Item\UserExperienceAnalyticsBatteryHealthDeviceAppImpactItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDeviceAppImpact\UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDevicePerformance\Item\UserExperienceAnalyticsBatteryHealthDevicePerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDevicePerformance\UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory\Item\UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistory\UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthModelPerformance\Item\UserExperienceAnalyticsBatteryHealthModelPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthModelPerformance\UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthOsPerformance\Item\UserExperienceAnalyticsBatteryHealthOsPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthOsPerformance\UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsBatteryHealthRuntimeDetails\UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsCategories\Item\UserExperienceAnalyticsCategoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsCategories\UserExperienceAnalyticsCategoriesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceMetricHistory\UserExperienceAnalyticsDeviceMetricHistoryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDevicePerformance\Item\UserExperienceAnalyticsDevicePerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDevicePerformance\UserExperienceAnalyticsDevicePerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceScope\UserExperienceAnalyticsDeviceScopeRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceScopes\Item\UserExperienceAnalyticsDeviceScopeItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceScopes\UserExperienceAnalyticsDeviceScopesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceScores\Item\UserExperienceAnalyticsDeviceScoresItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceScores\UserExperienceAnalyticsDeviceScoresRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupHistory\Item\UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupHistory\UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupProcesses\Item\UserExperienceAnalyticsDeviceStartupProcessItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupProcesses\UserExperienceAnalyticsDeviceStartupProcessesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupProcessPerformance\Item\UserExperienceAnalyticsDeviceStartupProcessPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceStartupProcessPerformance\UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDevicesWithoutCloudIdentity\Item\UserExperienceAnalyticsDeviceWithoutCloudIdentityItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDevicesWithoutCloudIdentity\UserExperienceAnalyticsDevicesWithoutCloudIdentityRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsImpactingProcess\Item\UserExperienceAnalyticsImpactingProcessItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsImpactingProcess\UserExperienceAnalyticsImpactingProcessRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsMetricHistory\UserExperienceAnalyticsMetricHistoryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsModelScores\Item\UserExperienceAnalyticsModelScoresItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsModelScores\UserExperienceAnalyticsModelScoresRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsNotAutopilotReadyDevice\Item\UserExperienceAnalyticsNotAutopilotReadyDeviceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsNotAutopilotReadyDevice\UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsOverview\UserExperienceAnalyticsOverviewRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsRemoteConnection\Item\UserExperienceAnalyticsRemoteConnectionItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsRemoteConnection\UserExperienceAnalyticsRemoteConnectionRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsResourcePerformance\Item\UserExperienceAnalyticsResourcePerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsResourcePerformance\UserExperienceAnalyticsResourcePerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsScoreHistory\Item\UserExperienceAnalyticsScoreHistoryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsScoreHistory\UserExperienceAnalyticsScoreHistoryRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsSummarizedDeviceScopes\UserExperienceAnalyticsSummarizedDeviceScopesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsSummarizeWorkFromAnywhereDevices\UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric\UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsWorkFromAnywhereMetrics\Item\UserExperienceAnalyticsWorkFromAnywhereMetricItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsWorkFromAnywhereMetrics\UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsWorkFromAnywhereModelPerformance\Item\UserExperienceAnalyticsWorkFromAnywhereModelPerformanceItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsWorkFromAnywhereModelPerformance\UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserPfxCertificates\Item\UserPFXCertificateItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\UserPfxCertificates\UserPfxCertificatesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\VerifyWindowsEnrollmentAutoDiscoveryWithDomainName\VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\VirtualEndpoint\VirtualEndpointRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsAutopilotDeploymentProfiles\Item\WindowsAutopilotDeploymentProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsAutopilotDeploymentProfiles\WindowsAutopilotDeploymentProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsAutopilotDeviceIdentities\Item\WindowsAutopilotDeviceIdentityItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsAutopilotDeviceIdentities\WindowsAutopilotDeviceIdentitiesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsAutopilotSettings\WindowsAutopilotSettingsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsDriverUpdateProfiles\Item\WindowsDriverUpdateProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsDriverUpdateProfiles\WindowsDriverUpdateProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsFeatureUpdateProfiles\Item\WindowsFeatureUpdateProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsFeatureUpdateProfiles\WindowsFeatureUpdateProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsInformationProtectionAppLearningSummaries\Item\WindowsInformationProtectionAppLearningSummaryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsInformationProtectionAppLearningSummaries\WindowsInformationProtectionAppLearningSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsInformationProtectionNetworkLearningSummaries\Item\WindowsInformationProtectionNetworkLearningSummaryItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsInformationProtectionNetworkLearningSummaries\WindowsInformationProtectionNetworkLearningSummariesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsMalwareInformation\Item\WindowsMalwareInformationItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsMalwareInformation\WindowsMalwareInformationRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsQualityUpdateProfiles\Item\WindowsQualityUpdateProfileItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsQualityUpdateProfiles\WindowsQualityUpdateProfilesRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsUpdateCatalogItems\Item\WindowsUpdateCatalogItemItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\WindowsUpdateCatalogItems\WindowsUpdateCatalogItemsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ZebraFotaArtifacts\Item\ZebraFotaArtifactItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ZebraFotaArtifacts\ZebraFotaArtifactsRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ZebraFotaConnector\ZebraFotaConnectorRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ZebraFotaDeployments\Item\ZebraFotaDeploymentItemRequestBuilder;
use Microsoft\Graph\Beta\Generated\DeviceManagement\ZebraFotaDeployments\ZebraFotaDeploymentsRequestBuilder;
use Microsoft\Graph\Beta\Generated\Models\DeviceManagement\DeviceManagement;
use Microsoft\Graph\Beta\Generated\Models\ODataErrors\ODataError;
use Microsoft\Kiota\Abstractions\HttpMethod;
use Microsoft\Kiota\Abstractions\RequestAdapter;
use Microsoft\Kiota\Abstractions\RequestInformation;
use Microsoft\Kiota\Abstractions\RequestOption;
use Microsoft\Kiota\Abstractions\ResponseHandler;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParsableFactory;

class DeviceManagementRequestBuilder 
{
    /**
     * Provides operations to manage the advancedThreatProtectionOnboardingStateSummary property of the microsoft.graph.deviceManagement entity.
    */
    public function advancedThreatProtectionOnboardingStateSummary(): AdvancedThreatProtectionOnboardingStateSummaryRequestBuilder {
        return new AdvancedThreatProtectionOnboardingStateSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidDeviceOwnerEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function androidDeviceOwnerEnrollmentProfiles(): AndroidDeviceOwnerEnrollmentProfilesRequestBuilder {
        return new AndroidDeviceOwnerEnrollmentProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidForWorkAppConfigurationSchemas property of the microsoft.graph.deviceManagement entity.
    */
    public function androidForWorkAppConfigurationSchemas(): AndroidForWorkAppConfigurationSchemasRequestBuilder {
        return new AndroidForWorkAppConfigurationSchemasRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidForWorkEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function androidForWorkEnrollmentProfiles(): AndroidForWorkEnrollmentProfilesRequestBuilder {
        return new AndroidForWorkEnrollmentProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidForWorkSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function androidForWorkSettings(): AndroidForWorkSettingsRequestBuilder {
        return new AndroidForWorkSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidManagedStoreAccountEnterpriseSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function androidManagedStoreAccountEnterpriseSettings(): AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder {
        return new AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidManagedStoreAppConfigurationSchemas property of the microsoft.graph.deviceManagement entity.
    */
    public function androidManagedStoreAppConfigurationSchemas(): AndroidManagedStoreAppConfigurationSchemasRequestBuilder {
        return new AndroidManagedStoreAppConfigurationSchemasRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the applePushNotificationCertificate property of the microsoft.graph.deviceManagement entity.
    */
    public function applePushNotificationCertificate(): ApplePushNotificationCertificateRequestBuilder {
        return new ApplePushNotificationCertificateRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the appleUserInitiatedEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function appleUserInitiatedEnrollmentProfiles(): AppleUserInitiatedEnrollmentProfilesRequestBuilder {
        return new AppleUserInitiatedEnrollmentProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the assignmentFilters property of the microsoft.graph.deviceManagement entity.
    */
    public function assignmentFilters(): AssignmentFiltersRequestBuilder {
        return new AssignmentFiltersRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the auditEvents property of the microsoft.graph.deviceManagement entity.
    */
    public function auditEvents(): AuditEventsRequestBuilder {
        return new AuditEventsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
    */
    public function autopilotEvents(): AutopilotEventsRequestBuilder {
        return new AutopilotEventsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the cartToClassAssociations property of the microsoft.graph.deviceManagement entity.
    */
    public function cartToClassAssociations(): CartToClassAssociationsRequestBuilder {
        return new CartToClassAssociationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the categories property of the microsoft.graph.deviceManagement entity.
    */
    public function categories(): CategoriesRequestBuilder {
        return new CategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the certificateConnectorDetails property of the microsoft.graph.deviceManagement entity.
    */
    public function certificateConnectorDetails(): CertificateConnectorDetailsRequestBuilder {
        return new CertificateConnectorDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the chromeOSOnboardingSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function chromeOSOnboardingSettings(): ChromeOSOnboardingSettingsRequestBuilder {
        return new ChromeOSOnboardingSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the cloudPCConnectivityIssues property of the microsoft.graph.deviceManagement entity.
    */
    public function cloudPCConnectivityIssues(): CloudPCConnectivityIssuesRequestBuilder {
        return new CloudPCConnectivityIssuesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
    */
    public function comanagedDevices(): ComanagedDevicesRequestBuilder {
        return new ComanagedDevicesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the comanagementEligibleDevices property of the microsoft.graph.deviceManagement entity.
    */
    public function comanagementEligibleDevices(): ComanagementEligibleDevicesRequestBuilder {
        return new ComanagementEligibleDevicesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the complianceCategories property of the microsoft.graph.deviceManagement entity.
    */
    public function complianceCategories(): ComplianceCategoriesRequestBuilder {
        return new ComplianceCategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the complianceManagementPartners property of the microsoft.graph.deviceManagement entity.
    */
    public function complianceManagementPartners(): ComplianceManagementPartnersRequestBuilder {
        return new ComplianceManagementPartnersRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the compliancePolicies property of the microsoft.graph.deviceManagement entity.
    */
    public function compliancePolicies(): CompliancePoliciesRequestBuilder {
        return new CompliancePoliciesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the complianceSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function complianceSettings(): ComplianceSettingsRequestBuilder {
        return new ComplianceSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the conditionalAccessSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function conditionalAccessSettings(): ConditionalAccessSettingsRequestBuilder {
        return new ConditionalAccessSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the configManagerCollections property of the microsoft.graph.deviceManagement entity.
    */
    public function configManagerCollections(): ConfigManagerCollectionsRequestBuilder {
        return new ConfigManagerCollectionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the configurationCategories property of the microsoft.graph.deviceManagement entity.
    */
    public function configurationCategories(): ConfigurationCategoriesRequestBuilder {
        return new ConfigurationCategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the configurationPolicies property of the microsoft.graph.deviceManagement entity.
    */
    public function configurationPolicies(): ConfigurationPoliciesRequestBuilder {
        return new ConfigurationPoliciesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the configurationPolicyTemplates property of the microsoft.graph.deviceManagement entity.
    */
    public function configurationPolicyTemplates(): ConfigurationPolicyTemplatesRequestBuilder {
        return new ConfigurationPolicyTemplatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the configurationSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function configurationSettings(): ConfigurationSettingsRequestBuilder {
        return new ConfigurationSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the dataSharingConsents property of the microsoft.graph.deviceManagement entity.
    */
    public function dataSharingConsents(): DataSharingConsentsRequestBuilder {
        return new DataSharingConsentsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the depOnboardingSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function depOnboardingSettings(): DepOnboardingSettingsRequestBuilder {
        return new DepOnboardingSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the derivedCredentials property of the microsoft.graph.deviceManagement entity.
    */
    public function derivedCredentials(): DerivedCredentialsRequestBuilder {
        return new DerivedCredentialsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the detectedApps property of the microsoft.graph.deviceManagement entity.
    */
    public function detectedApps(): DetectedAppsRequestBuilder {
        return new DetectedAppsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceCategories property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceCategories(): DeviceCategoriesRequestBuilder {
        return new DeviceCategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceCompliancePolicies property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceCompliancePolicies(): DeviceCompliancePoliciesRequestBuilder {
        return new DeviceCompliancePoliciesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceCompliancePolicyDeviceStateSummary property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceCompliancePolicyDeviceStateSummary(): DeviceCompliancePolicyDeviceStateSummaryRequestBuilder {
        return new DeviceCompliancePolicyDeviceStateSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceCompliancePolicySettingStateSummaries(): DeviceCompliancePolicySettingStateSummariesRequestBuilder {
        return new DeviceCompliancePolicySettingStateSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceComplianceScripts property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceComplianceScripts(): DeviceComplianceScriptsRequestBuilder {
        return new DeviceComplianceScriptsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurationConflictSummary property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurationConflictSummary(): DeviceConfigurationConflictSummaryRequestBuilder {
        return new DeviceConfigurationConflictSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurationDeviceStateSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurationDeviceStateSummaries(): DeviceConfigurationDeviceStateSummariesRequestBuilder {
        return new DeviceConfigurationDeviceStateSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurationRestrictedAppsViolations property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurationRestrictedAppsViolations(): DeviceConfigurationRestrictedAppsViolationsRequestBuilder {
        return new DeviceConfigurationRestrictedAppsViolationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurations property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurations(): DeviceConfigurationsRequestBuilder {
        return new DeviceConfigurationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurationsAllManagedDeviceCertificateStates property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurationsAllManagedDeviceCertificateStates(): DeviceConfigurationsAllManagedDeviceCertificateStatesRequestBuilder {
        return new DeviceConfigurationsAllManagedDeviceCertificateStatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceConfigurationUserStateSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceConfigurationUserStateSummaries(): DeviceConfigurationUserStateSummariesRequestBuilder {
        return new DeviceConfigurationUserStateSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceCustomAttributeShellScripts property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceCustomAttributeShellScripts(): DeviceCustomAttributeShellScriptsRequestBuilder {
        return new DeviceCustomAttributeShellScriptsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceEnrollmentConfigurations property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceEnrollmentConfigurations(): DeviceEnrollmentConfigurationsRequestBuilder {
        return new DeviceEnrollmentConfigurationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceHealthScripts property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceHealthScripts(): DeviceHealthScriptsRequestBuilder {
        return new DeviceHealthScriptsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceManagementPartners property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceManagementPartners(): DeviceManagementPartnersRequestBuilder {
        return new DeviceManagementPartnersRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceManagementScripts property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceManagementScripts(): DeviceManagementScriptsRequestBuilder {
        return new DeviceManagementScriptsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the deviceShellScripts property of the microsoft.graph.deviceManagement entity.
    */
    public function deviceShellScripts(): DeviceShellScriptsRequestBuilder {
        return new DeviceShellScriptsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the domainJoinConnectors property of the microsoft.graph.deviceManagement entity.
    */
    public function domainJoinConnectors(): DomainJoinConnectorsRequestBuilder {
        return new DomainJoinConnectorsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the embeddedSIMActivationCodePools property of the microsoft.graph.deviceManagement entity.
    */
    public function embeddedSIMActivationCodePools(): EmbeddedSIMActivationCodePoolsRequestBuilder {
        return new EmbeddedSIMActivationCodePoolsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the enableAndroidDeviceAdministratorEnrollment method.
    */
    public function enableAndroidDeviceAdministratorEnrollment(): EnableAndroidDeviceAdministratorEnrollmentRequestBuilder {
        return new EnableAndroidDeviceAdministratorEnrollmentRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the enableLegacyPcManagement method.
    */
    public function enableLegacyPcManagement(): EnableLegacyPcManagementRequestBuilder {
        return new EnableLegacyPcManagementRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the enableUnlicensedAdminstrators method.
    */
    public function enableUnlicensedAdminstrators(): EnableUnlicensedAdminstratorsRequestBuilder {
        return new EnableUnlicensedAdminstratorsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the evaluateAssignmentFilter method.
    */
    public function evaluateAssignmentFilter(): EvaluateAssignmentFilterRequestBuilder {
        return new EvaluateAssignmentFilterRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
    */
    public function exchangeConnectors(): ExchangeConnectorsRequestBuilder {
        return new ExchangeConnectorsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the exchangeOnPremisesPolicies property of the microsoft.graph.deviceManagement entity.
    */
    public function exchangeOnPremisesPolicies(): ExchangeOnPremisesPoliciesRequestBuilder {
        return new ExchangeOnPremisesPoliciesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the exchangeOnPremisesPolicy property of the microsoft.graph.deviceManagement entity.
    */
    public function exchangeOnPremisesPolicy(): ExchangeOnPremisesPolicyRequestBuilder {
        return new ExchangeOnPremisesPolicyRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the getAssignmentFiltersStatusDetails method.
    */
    public function getAssignmentFiltersStatusDetails(): GetAssignmentFiltersStatusDetailsRequestBuilder {
        return new GetAssignmentFiltersStatusDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyCategories property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyCategories(): GroupPolicyCategoriesRequestBuilder {
        return new GroupPolicyCategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyConfigurations property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyConfigurations(): GroupPolicyConfigurationsRequestBuilder {
        return new GroupPolicyConfigurationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyDefinitionFiles property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyDefinitionFiles(): GroupPolicyDefinitionFilesRequestBuilder {
        return new GroupPolicyDefinitionFilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyDefinitions property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyDefinitions(): GroupPolicyDefinitionsRequestBuilder {
        return new GroupPolicyDefinitionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyMigrationReports property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyMigrationReports(): GroupPolicyMigrationReportsRequestBuilder {
        return new GroupPolicyMigrationReportsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyObjectFiles property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyObjectFiles(): GroupPolicyObjectFilesRequestBuilder {
        return new GroupPolicyObjectFilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the groupPolicyUploadedDefinitionFiles property of the microsoft.graph.deviceManagement entity.
    */
    public function groupPolicyUploadedDefinitionFiles(): GroupPolicyUploadedDefinitionFilesRequestBuilder {
        return new GroupPolicyUploadedDefinitionFilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the importedDeviceIdentities property of the microsoft.graph.deviceManagement entity.
    */
    public function importedDeviceIdentities(): ImportedDeviceIdentitiesRequestBuilder {
        return new ImportedDeviceIdentitiesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the importedWindowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
    */
    public function importedWindowsAutopilotDeviceIdentities(): ImportedWindowsAutopilotDeviceIdentitiesRequestBuilder {
        return new ImportedWindowsAutopilotDeviceIdentitiesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the intents property of the microsoft.graph.deviceManagement entity.
    */
    public function intents(): IntentsRequestBuilder {
        return new IntentsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function intuneBrandingProfiles(): IntuneBrandingProfilesRequestBuilder {
        return new IntuneBrandingProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the iosUpdateStatuses property of the microsoft.graph.deviceManagement entity.
    */
    public function iosUpdateStatuses(): IosUpdateStatusesRequestBuilder {
        return new IosUpdateStatusesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the macOSSoftwareUpdateAccountSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function macOSSoftwareUpdateAccountSummaries(): MacOSSoftwareUpdateAccountSummariesRequestBuilder {
        return new MacOSSoftwareUpdateAccountSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the managedDeviceEncryptionStates property of the microsoft.graph.deviceManagement entity.
    */
    public function managedDeviceEncryptionStates(): ManagedDeviceEncryptionStatesRequestBuilder {
        return new ManagedDeviceEncryptionStatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the managedDeviceOverview property of the microsoft.graph.deviceManagement entity.
    */
    public function managedDeviceOverview(): ManagedDeviceOverviewRequestBuilder {
        return new ManagedDeviceOverviewRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
    */
    public function managedDevices(): ManagedDevicesRequestBuilder {
        return new ManagedDevicesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the microsoftTunnelConfigurations property of the microsoft.graph.deviceManagement entity.
    */
    public function microsoftTunnelConfigurations(): MicrosoftTunnelConfigurationsRequestBuilder {
        return new MicrosoftTunnelConfigurationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the microsoftTunnelHealthThresholds property of the microsoft.graph.deviceManagement entity.
    */
    public function microsoftTunnelHealthThresholds(): MicrosoftTunnelHealthThresholdsRequestBuilder {
        return new MicrosoftTunnelHealthThresholdsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the microsoftTunnelServerLogCollectionResponses property of the microsoft.graph.deviceManagement entity.
    */
    public function microsoftTunnelServerLogCollectionResponses(): MicrosoftTunnelServerLogCollectionResponsesRequestBuilder {
        return new MicrosoftTunnelServerLogCollectionResponsesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the microsoftTunnelSites property of the microsoft.graph.deviceManagement entity.
    */
    public function microsoftTunnelSites(): MicrosoftTunnelSitesRequestBuilder {
        return new MicrosoftTunnelSitesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the mobileAppTroubleshootingEvents property of the microsoft.graph.deviceManagement entity.
    */
    public function mobileAppTroubleshootingEvents(): MobileAppTroubleshootingEventsRequestBuilder {
        return new MobileAppTroubleshootingEventsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the mobileThreatDefenseConnectors property of the microsoft.graph.deviceManagement entity.
    */
    public function mobileThreatDefenseConnectors(): MobileThreatDefenseConnectorsRequestBuilder {
        return new MobileThreatDefenseConnectorsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the monitoring property of the microsoft.graph.deviceManagement entity.
    */
    public function monitoring(): MonitoringRequestBuilder {
        return new MonitoringRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the ndesConnectors property of the microsoft.graph.deviceManagement entity.
    */
    public function ndesConnectors(): NdesConnectorsRequestBuilder {
        return new NdesConnectorsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the notificationMessageTemplates property of the microsoft.graph.deviceManagement entity.
    */
    public function notificationMessageTemplates(): NotificationMessageTemplatesRequestBuilder {
        return new NotificationMessageTemplatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the oemWarrantyInformationOnboarding property of the microsoft.graph.deviceManagement entity.
    */
    public function oemWarrantyInformationOnboarding(): OemWarrantyInformationOnboardingRequestBuilder {
        return new OemWarrantyInformationOnboardingRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * @var array<string, mixed> $pathParameters Path parameters for the request
    */
    private array $pathParameters;
    
    /**
     * Provides operations to manage the remoteActionAudits property of the microsoft.graph.deviceManagement entity.
    */
    public function remoteActionAudits(): RemoteActionAuditsRequestBuilder {
        return new RemoteActionAuditsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the remoteAssistancePartners property of the microsoft.graph.deviceManagement entity.
    */
    public function remoteAssistancePartners(): RemoteAssistancePartnersRequestBuilder {
        return new RemoteAssistancePartnersRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the remoteAssistanceSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function remoteAssistanceSettings(): RemoteAssistanceSettingsRequestBuilder {
        return new RemoteAssistanceSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the reports property of the microsoft.graph.deviceManagement entity.
    */
    public function reports(): ReportsRequestBuilder {
        return new ReportsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * @var RequestAdapter $requestAdapter The request adapter to use to execute the requests.
    */
    private RequestAdapter $requestAdapter;
    
    /**
     * Provides operations to manage the resourceAccessProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function resourceAccessProfiles(): ResourceAccessProfilesRequestBuilder {
        return new ResourceAccessProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the resourceOperations property of the microsoft.graph.deviceManagement entity.
    */
    public function resourceOperations(): ResourceOperationsRequestBuilder {
        return new ResourceOperationsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the reusablePolicySettings property of the microsoft.graph.deviceManagement entity.
    */
    public function reusablePolicySettings(): ReusablePolicySettingsRequestBuilder {
        return new ReusablePolicySettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the reusableSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function reusableSettings(): ReusableSettingsRequestBuilder {
        return new ReusableSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the roleAssignments property of the microsoft.graph.deviceManagement entity.
    */
    public function roleAssignments(): RoleAssignmentsRequestBuilder {
        return new RoleAssignmentsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the roleDefinitions property of the microsoft.graph.deviceManagement entity.
    */
    public function roleDefinitions(): RoleDefinitionsRequestBuilder {
        return new RoleDefinitionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the roleScopeTags property of the microsoft.graph.deviceManagement entity.
    */
    public function roleScopeTags(): RoleScopeTagsRequestBuilder {
        return new RoleScopeTagsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to call the sendCustomNotificationToCompanyPortal method.
    */
    public function sendCustomNotificationToCompanyPortal(): SendCustomNotificationToCompanyPortalRequestBuilder {
        return new SendCustomNotificationToCompanyPortalRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagement entity.
    */
    public function settingDefinitions(): SettingDefinitionsRequestBuilder {
        return new SettingDefinitionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the softwareUpdateStatusSummary property of the microsoft.graph.deviceManagement entity.
    */
    public function softwareUpdateStatusSummary(): SoftwareUpdateStatusSummaryRequestBuilder {
        return new SoftwareUpdateStatusSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the telecomExpenseManagementPartners property of the microsoft.graph.deviceManagement entity.
    */
    public function telecomExpenseManagementPartners(): TelecomExpenseManagementPartnersRequestBuilder {
        return new TelecomExpenseManagementPartnersRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the templates property of the microsoft.graph.deviceManagement entity.
    */
    public function templates(): TemplatesRequestBuilder {
        return new TemplatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the templateSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function templateSettings(): TemplateSettingsRequestBuilder {
        return new TemplateSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the tenantAttachRBAC property of the microsoft.graph.deviceManagement entity.
    */
    public function tenantAttachRBAC(): TenantAttachRBACRequestBuilder {
        return new TenantAttachRBACRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the termsAndConditions property of the microsoft.graph.deviceManagement entity.
    */
    public function termsAndConditions(): TermsAndConditionsRequestBuilder {
        return new TermsAndConditionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the troubleshootingEvents property of the microsoft.graph.deviceManagement entity.
    */
    public function troubleshootingEvents(): TroubleshootingEventsRequestBuilder {
        return new TroubleshootingEventsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * @var string $urlTemplate Url template to use to build the URL for the current request builder
    */
    private string $urlTemplate;
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAnomaly property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAnomaly(): UserExperienceAnalyticsAnomalyRequestBuilder {
        return new UserExperienceAnalyticsAnomalyRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAnomalyDevice property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAnomalyDevice(): UserExperienceAnalyticsAnomalyDeviceRequestBuilder {
        return new UserExperienceAnalyticsAnomalyDeviceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformance(): UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder {
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion(): UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionRequestBuilder {
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails(): UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilder {
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId(): UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilder {
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion(): UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilder {
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDeviceModelPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthDeviceModelPerformance(): UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder {
        return new UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthDevicePerformance(): UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder {
        return new UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformanceDetails property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthDevicePerformanceDetails(): UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder {
        return new UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthOSVersionPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthOSVersionPerformance(): UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder {
        return new UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthOverview property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsAppHealthOverview(): UserExperienceAnalyticsAppHealthOverviewRequestBuilder {
        return new UserExperienceAnalyticsAppHealthOverviewRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBaselines property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBaselines(): UserExperienceAnalyticsBaselinesRequestBuilder {
        return new UserExperienceAnalyticsBaselinesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthAppImpact property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthAppImpact(): UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthAppImpactRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthCapacityDetails property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthCapacityDetails(): UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthCapacityDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDeviceAppImpact property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthDeviceAppImpact(): UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthDeviceAppImpactRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDevicePerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthDevicePerformance(): UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthDevicePerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory(): UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthModelPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthModelPerformance(): UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthModelPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthOsPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthOsPerformance(): UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthOsPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthRuntimeDetails property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsBatteryHealthRuntimeDetails(): UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder {
        return new UserExperienceAnalyticsBatteryHealthRuntimeDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsCategories property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsCategories(): UserExperienceAnalyticsCategoriesRequestBuilder {
        return new UserExperienceAnalyticsCategoriesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceMetricHistory property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceMetricHistory(): UserExperienceAnalyticsDeviceMetricHistoryRequestBuilder {
        return new UserExperienceAnalyticsDeviceMetricHistoryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDevicePerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDevicePerformance(): UserExperienceAnalyticsDevicePerformanceRequestBuilder {
        return new UserExperienceAnalyticsDevicePerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScope property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceScope(): UserExperienceAnalyticsDeviceScopeRequestBuilder {
        return new UserExperienceAnalyticsDeviceScopeRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScopes property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceScopes(): UserExperienceAnalyticsDeviceScopesRequestBuilder {
        return new UserExperienceAnalyticsDeviceScopesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScores property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceScores(): UserExperienceAnalyticsDeviceScoresRequestBuilder {
        return new UserExperienceAnalyticsDeviceScoresRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceStartupHistory(): UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder {
        return new UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcesses property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceStartupProcesses(): UserExperienceAnalyticsDeviceStartupProcessesRequestBuilder {
        return new UserExperienceAnalyticsDeviceStartupProcessesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcessPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDeviceStartupProcessPerformance(): UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder {
        return new UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsDevicesWithoutCloudIdentity property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsDevicesWithoutCloudIdentity(): UserExperienceAnalyticsDevicesWithoutCloudIdentityRequestBuilder {
        return new UserExperienceAnalyticsDevicesWithoutCloudIdentityRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsImpactingProcess property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsImpactingProcess(): UserExperienceAnalyticsImpactingProcessRequestBuilder {
        return new UserExperienceAnalyticsImpactingProcessRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsMetricHistory property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsMetricHistory(): UserExperienceAnalyticsMetricHistoryRequestBuilder {
        return new UserExperienceAnalyticsMetricHistoryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsModelScores property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsModelScores(): UserExperienceAnalyticsModelScoresRequestBuilder {
        return new UserExperienceAnalyticsModelScoresRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsNotAutopilotReadyDevice property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsNotAutopilotReadyDevice(): UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder {
        return new UserExperienceAnalyticsNotAutopilotReadyDeviceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsOverview property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsOverview(): UserExperienceAnalyticsOverviewRequestBuilder {
        return new UserExperienceAnalyticsOverviewRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsRemoteConnection property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsRemoteConnection(): UserExperienceAnalyticsRemoteConnectionRequestBuilder {
        return new UserExperienceAnalyticsRemoteConnectionRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsResourcePerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsResourcePerformance(): UserExperienceAnalyticsResourcePerformanceRequestBuilder {
        return new UserExperienceAnalyticsResourcePerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsScoreHistory property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsScoreHistory(): UserExperienceAnalyticsScoreHistoryRequestBuilder {
        return new UserExperienceAnalyticsScoreHistoryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric(): UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder {
        return new UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereMetrics property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsWorkFromAnywhereMetrics(): UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilder {
        return new UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereModelPerformance property of the microsoft.graph.deviceManagement entity.
    */
    public function userExperienceAnalyticsWorkFromAnywhereModelPerformance(): UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder {
        return new UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the userPfxCertificates property of the microsoft.graph.deviceManagement entity.
    */
    public function userPfxCertificates(): UserPfxCertificatesRequestBuilder {
        return new UserPfxCertificatesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the virtualEndpoint property of the microsoft.graph.deviceManagement entity.
    */
    public function virtualEndpoint(): VirtualEndpointRequestBuilder {
        return new VirtualEndpointRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsAutopilotDeploymentProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsAutopilotDeploymentProfiles(): WindowsAutopilotDeploymentProfilesRequestBuilder {
        return new WindowsAutopilotDeploymentProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsAutopilotDeviceIdentities(): WindowsAutopilotDeviceIdentitiesRequestBuilder {
        return new WindowsAutopilotDeviceIdentitiesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsAutopilotSettings property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsAutopilotSettings(): WindowsAutopilotSettingsRequestBuilder {
        return new WindowsAutopilotSettingsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsDriverUpdateProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsDriverUpdateProfiles(): WindowsDriverUpdateProfilesRequestBuilder {
        return new WindowsDriverUpdateProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsFeatureUpdateProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsFeatureUpdateProfiles(): WindowsFeatureUpdateProfilesRequestBuilder {
        return new WindowsFeatureUpdateProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsInformationProtectionAppLearningSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsInformationProtectionAppLearningSummaries(): WindowsInformationProtectionAppLearningSummariesRequestBuilder {
        return new WindowsInformationProtectionAppLearningSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsInformationProtectionNetworkLearningSummaries property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsInformationProtectionNetworkLearningSummaries(): WindowsInformationProtectionNetworkLearningSummariesRequestBuilder {
        return new WindowsInformationProtectionNetworkLearningSummariesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsMalwareInformation property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsMalwareInformation(): WindowsMalwareInformationRequestBuilder {
        return new WindowsMalwareInformationRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsQualityUpdateProfiles property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsQualityUpdateProfiles(): WindowsQualityUpdateProfilesRequestBuilder {
        return new WindowsQualityUpdateProfilesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the windowsUpdateCatalogItems property of the microsoft.graph.deviceManagement entity.
    */
    public function windowsUpdateCatalogItems(): WindowsUpdateCatalogItemsRequestBuilder {
        return new WindowsUpdateCatalogItemsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the zebraFotaArtifacts property of the microsoft.graph.deviceManagement entity.
    */
    public function zebraFotaArtifacts(): ZebraFotaArtifactsRequestBuilder {
        return new ZebraFotaArtifactsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the zebraFotaConnector property of the microsoft.graph.deviceManagement entity.
    */
    public function zebraFotaConnector(): ZebraFotaConnectorRequestBuilder {
        return new ZebraFotaConnectorRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the zebraFotaDeployments property of the microsoft.graph.deviceManagement entity.
    */
    public function zebraFotaDeployments(): ZebraFotaDeploymentsRequestBuilder {
        return new ZebraFotaDeploymentsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }
    
    /**
     * Provides operations to manage the androidDeviceOwnerEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AndroidDeviceOwnerEnrollmentProfileItemRequestBuilder
    */
    public function androidDeviceOwnerEnrollmentProfilesById(string $id): AndroidDeviceOwnerEnrollmentProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['androidDeviceOwnerEnrollmentProfile%2Did'] = $id;
        return new AndroidDeviceOwnerEnrollmentProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the androidForWorkAppConfigurationSchemas property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AndroidForWorkAppConfigurationSchemaItemRequestBuilder
    */
    public function androidForWorkAppConfigurationSchemasById(string $id): AndroidForWorkAppConfigurationSchemaItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['androidForWorkAppConfigurationSchema%2Did'] = $id;
        return new AndroidForWorkAppConfigurationSchemaItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the androidForWorkEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AndroidForWorkEnrollmentProfileItemRequestBuilder
    */
    public function androidForWorkEnrollmentProfilesById(string $id): AndroidForWorkEnrollmentProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['androidForWorkEnrollmentProfile%2Did'] = $id;
        return new AndroidForWorkEnrollmentProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the androidManagedStoreAppConfigurationSchemas property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AndroidManagedStoreAppConfigurationSchemaItemRequestBuilder
    */
    public function androidManagedStoreAppConfigurationSchemasById(string $id): AndroidManagedStoreAppConfigurationSchemaItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['androidManagedStoreAppConfigurationSchema%2Did'] = $id;
        return new AndroidManagedStoreAppConfigurationSchemaItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the appleUserInitiatedEnrollmentProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AppleUserInitiatedEnrollmentProfileItemRequestBuilder
    */
    public function appleUserInitiatedEnrollmentProfilesById(string $id): AppleUserInitiatedEnrollmentProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['appleUserInitiatedEnrollmentProfile%2Did'] = $id;
        return new AppleUserInitiatedEnrollmentProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the assignmentFilters property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceAndAppManagementAssignmentFilterItemRequestBuilder
    */
    public function assignmentFiltersById(string $id): DeviceAndAppManagementAssignmentFilterItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceAndAppManagementAssignmentFilter%2Did'] = $id;
        return new DeviceAndAppManagementAssignmentFilterItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the auditEvents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return AuditEventItemRequestBuilder
    */
    public function auditEventsById(string $id): AuditEventItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['auditEvent%2Did'] = $id;
        return new AuditEventItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the autopilotEvents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementAutopilotEventItemRequestBuilder
    */
    public function autopilotEventsById(string $id): DeviceManagementAutopilotEventItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementAutopilotEvent%2Did'] = $id;
        return new DeviceManagementAutopilotEventItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the cartToClassAssociations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return CartToClassAssociationItemRequestBuilder
    */
    public function cartToClassAssociationsById(string $id): CartToClassAssociationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['cartToClassAssociation%2Did'] = $id;
        return new CartToClassAssociationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the categories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementSettingCategoryItemRequestBuilder
    */
    public function categoriesById(string $id): DeviceManagementSettingCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementSettingCategory%2Did'] = $id;
        return new DeviceManagementSettingCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the certificateConnectorDetails property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return CertificateConnectorDetailsItemRequestBuilder
    */
    public function certificateConnectorDetailsById(string $id): CertificateConnectorDetailsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['certificateConnectorDetails%2Did'] = $id;
        return new CertificateConnectorDetailsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the chromeOSOnboardingSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ChromeOSOnboardingSettingsItemRequestBuilder
    */
    public function chromeOSOnboardingSettingsById(string $id): ChromeOSOnboardingSettingsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['chromeOSOnboardingSettings%2Did'] = $id;
        return new ChromeOSOnboardingSettingsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the cloudPCConnectivityIssues property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return CloudPCConnectivityIssueItemRequestBuilder
    */
    public function cloudPCConnectivityIssuesById(string $id): CloudPCConnectivityIssueItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['cloudPCConnectivityIssue%2Did'] = $id;
        return new CloudPCConnectivityIssueItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagedDevices\Item\ManagedDeviceItemRequestBuilder
    */
    public function comanagedDevicesById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagedDevices\Item\ManagedDeviceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['managedDevice%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ComanagedDevices\Item\ManagedDeviceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the comanagementEligibleDevices property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ComanagementEligibleDeviceItemRequestBuilder
    */
    public function comanagementEligibleDevicesById(string $id): ComanagementEligibleDeviceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['comanagementEligibleDevice%2Did'] = $id;
        return new ComanagementEligibleDeviceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the complianceCategories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder
    */
    public function complianceCategoriesById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationCategory%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the complianceManagementPartners property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ComplianceManagementPartnerItemRequestBuilder
    */
    public function complianceManagementPartnersById(string $id): ComplianceManagementPartnerItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['complianceManagementPartner%2Did'] = $id;
        return new ComplianceManagementPartnerItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the compliancePolicies property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementCompliancePolicyItemRequestBuilder
    */
    public function compliancePoliciesById(string $id): DeviceManagementCompliancePolicyItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementCompliancePolicy%2Did'] = $id;
        return new DeviceManagementCompliancePolicyItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the complianceSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder
    */
    public function complianceSettingsById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationSettingDefinition%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ComplianceSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the configManagerCollections property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ConfigManagerCollectionItemRequestBuilder
    */
    public function configManagerCollectionsById(string $id): ConfigManagerCollectionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['configManagerCollection%2Did'] = $id;
        return new ConfigManagerCollectionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the configurationCategories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder
    */
    public function configurationCategoriesById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationCategory%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationCategories\Item\DeviceManagementConfigurationCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the configurationPolicies property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementConfigurationPolicyItemRequestBuilder
    */
    public function configurationPoliciesById(string $id): DeviceManagementConfigurationPolicyItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationPolicy%2Did'] = $id;
        return new DeviceManagementConfigurationPolicyItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the configurationPolicyTemplates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementConfigurationPolicyTemplateItemRequestBuilder
    */
    public function configurationPolicyTemplatesById(string $id): DeviceManagementConfigurationPolicyTemplateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationPolicyTemplate%2Did'] = $id;
        return new DeviceManagementConfigurationPolicyTemplateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the configurationSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder
    */
    public function configurationSettingsById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationSettingDefinition%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ConfigurationSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Instantiates a new DeviceManagementRequestBuilder and sets the default values.
     * @param array<string, mixed> $pathParameters Path parameters for the request
     * @param RequestAdapter $requestAdapter The request adapter to use to execute the requests.
    */
    public function __construct(array $pathParameters, RequestAdapter $requestAdapter) {
        $this->urlTemplate = '{+baseurl}/deviceManagement{?%24select,%24expand}';
        $this->requestAdapter = $requestAdapter;
        $this->pathParameters = $pathParameters;
    }

    /**
     * Get deviceManagement
     * @param DeviceManagementRequestBuilderGetRequestConfiguration|null $requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @return RequestInformation
    */
    public function createGetRequestInformation(?DeviceManagementRequestBuilderGetRequestConfiguration $requestConfiguration = null): RequestInformation {
        $requestInfo = new RequestInformation();
        $requestInfo->urlTemplate = $this->urlTemplate;
        $requestInfo->pathParameters = $this->pathParameters;
        $requestInfo->httpMethod = HttpMethod::GET;
        $requestInfo->headers = array_merge($requestInfo->headers, ["Accept" => "application/json"]);
        if ($requestConfiguration !== null) {
            if ($requestConfiguration->headers !== null) {
                $requestInfo->headers = array_merge($requestInfo->headers, $requestConfiguration->headers);
            }
            if ($requestConfiguration->queryParameters !== null) {
                $requestInfo->setQueryParameters($requestConfiguration->queryParameters);
            }
            if ($requestConfiguration->options !== null) {
                $requestInfo->addRequestOptions(...$requestConfiguration->options);
            }
        }
        return $requestInfo;
    }

    /**
     * Update deviceManagement
     * @param DeviceManagement $body 
     * @param DeviceManagementRequestBuilderPatchRequestConfiguration|null $requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @return RequestInformation
    */
    public function createPatchRequestInformation(DeviceManagement $body, ?DeviceManagementRequestBuilderPatchRequestConfiguration $requestConfiguration = null): RequestInformation {
        $requestInfo = new RequestInformation();
        $requestInfo->urlTemplate = $this->urlTemplate;
        $requestInfo->pathParameters = $this->pathParameters;
        $requestInfo->httpMethod = HttpMethod::PATCH;
        $requestInfo->headers = array_merge($requestInfo->headers, ["Accept" => "application/json"]);
        if ($requestConfiguration !== null) {
            if ($requestConfiguration->headers !== null) {
                $requestInfo->headers = array_merge($requestInfo->headers, $requestConfiguration->headers);
            }
            if ($requestConfiguration->options !== null) {
                $requestInfo->addRequestOptions(...$requestConfiguration->options);
            }
        }
        $requestInfo->setContentFromParsable($this->requestAdapter, "application/json", $body);
        return $requestInfo;
    }

    /**
     * Provides operations to manage the dataSharingConsents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DataSharingConsentItemRequestBuilder
    */
    public function dataSharingConsentsById(string $id): DataSharingConsentItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['dataSharingConsent%2Did'] = $id;
        return new DataSharingConsentItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the depOnboardingSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DepOnboardingSettingItemRequestBuilder
    */
    public function depOnboardingSettingsById(string $id): DepOnboardingSettingItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['depOnboardingSetting%2Did'] = $id;
        return new DepOnboardingSettingItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the derivedCredentials property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementDerivedCredentialSettingsItemRequestBuilder
    */
    public function derivedCredentialsById(string $id): DeviceManagementDerivedCredentialSettingsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementDerivedCredentialSettings%2Did'] = $id;
        return new DeviceManagementDerivedCredentialSettingsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the detectedApps property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DetectedAppItemRequestBuilder
    */
    public function detectedAppsById(string $id): DetectedAppItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['detectedApp%2Did'] = $id;
        return new DetectedAppItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceCategories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceCategoryItemRequestBuilder
    */
    public function deviceCategoriesById(string $id): DeviceCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceCategory%2Did'] = $id;
        return new DeviceCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceCompliancePolicies property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceCompliancePolicyItemRequestBuilder
    */
    public function deviceCompliancePoliciesById(string $id): DeviceCompliancePolicyItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceCompliancePolicy%2Did'] = $id;
        return new DeviceCompliancePolicyItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceCompliancePolicySettingStateSummaryItemRequestBuilder
    */
    public function deviceCompliancePolicySettingStateSummariesById(string $id): DeviceCompliancePolicySettingStateSummaryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceCompliancePolicySettingStateSummary%2Did'] = $id;
        return new DeviceCompliancePolicySettingStateSummaryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceComplianceScripts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceComplianceScriptItemRequestBuilder
    */
    public function deviceComplianceScriptsById(string $id): DeviceComplianceScriptItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceComplianceScript%2Did'] = $id;
        return new DeviceComplianceScriptItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceConfigurationConflictSummary property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceConfigurationConflictSummaryItemRequestBuilder
    */
    public function deviceConfigurationConflictSummaryById(string $id): DeviceConfigurationConflictSummaryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceConfigurationConflictSummary%2Did'] = $id;
        return new DeviceConfigurationConflictSummaryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceConfigurationRestrictedAppsViolations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return RestrictedAppsViolationItemRequestBuilder
    */
    public function deviceConfigurationRestrictedAppsViolationsById(string $id): RestrictedAppsViolationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['restrictedAppsViolation%2Did'] = $id;
        return new RestrictedAppsViolationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceConfigurationsAllManagedDeviceCertificateStates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ManagedAllDeviceCertificateStateItemRequestBuilder
    */
    public function deviceConfigurationsAllManagedDeviceCertificateStatesById(string $id): ManagedAllDeviceCertificateStateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['managedAllDeviceCertificateState%2Did'] = $id;
        return new ManagedAllDeviceCertificateStateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceConfigurations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceConfigurationItemRequestBuilder
    */
    public function deviceConfigurationsById(string $id): DeviceConfigurationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceConfiguration%2Did'] = $id;
        return new DeviceConfigurationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceCustomAttributeShellScripts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceCustomAttributeShellScriptItemRequestBuilder
    */
    public function deviceCustomAttributeShellScriptsById(string $id): DeviceCustomAttributeShellScriptItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceCustomAttributeShellScript%2Did'] = $id;
        return new DeviceCustomAttributeShellScriptItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceEnrollmentConfigurations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceEnrollmentConfigurationItemRequestBuilder
    */
    public function deviceEnrollmentConfigurationsById(string $id): DeviceEnrollmentConfigurationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceEnrollmentConfiguration%2Did'] = $id;
        return new DeviceEnrollmentConfigurationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceHealthScripts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceHealthScriptItemRequestBuilder
    */
    public function deviceHealthScriptsById(string $id): DeviceHealthScriptItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceHealthScript%2Did'] = $id;
        return new DeviceHealthScriptItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceManagementPartners property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementPartnerItemRequestBuilder
    */
    public function deviceManagementPartnersById(string $id): DeviceManagementPartnerItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementPartner%2Did'] = $id;
        return new DeviceManagementPartnerItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceManagementScripts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementScriptItemRequestBuilder
    */
    public function deviceManagementScriptsById(string $id): DeviceManagementScriptItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementScript%2Did'] = $id;
        return new DeviceManagementScriptItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the deviceShellScripts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceShellScriptItemRequestBuilder
    */
    public function deviceShellScriptsById(string $id): DeviceShellScriptItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceShellScript%2Did'] = $id;
        return new DeviceShellScriptItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the domainJoinConnectors property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementDomainJoinConnectorItemRequestBuilder
    */
    public function domainJoinConnectorsById(string $id): DeviceManagementDomainJoinConnectorItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementDomainJoinConnector%2Did'] = $id;
        return new DeviceManagementDomainJoinConnectorItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the embeddedSIMActivationCodePools property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return EmbeddedSIMActivationCodePoolItemRequestBuilder
    */
    public function embeddedSIMActivationCodePoolsById(string $id): EmbeddedSIMActivationCodePoolItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['embeddedSIMActivationCodePool%2Did'] = $id;
        return new EmbeddedSIMActivationCodePoolItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementExchangeConnectorItemRequestBuilder
    */
    public function exchangeConnectorsById(string $id): DeviceManagementExchangeConnectorItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementExchangeConnector%2Did'] = $id;
        return new DeviceManagementExchangeConnectorItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the exchangeOnPremisesPolicies property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementExchangeOnPremisesPolicyItemRequestBuilder
    */
    public function exchangeOnPremisesPoliciesById(string $id): DeviceManagementExchangeOnPremisesPolicyItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementExchangeOnPremisesPolicy%2Did'] = $id;
        return new DeviceManagementExchangeOnPremisesPolicyItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Get deviceManagement
     * @param DeviceManagementRequestBuilderGetRequestConfiguration|null $requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @param ResponseHandler|null $responseHandler Response handler to use in place of the default response handling provided by the core service
     * @return Promise
    */
    public function get(?DeviceManagementRequestBuilderGetRequestConfiguration $requestConfiguration = null, ?ResponseHandler $responseHandler = null): Promise {
        $requestInfo = $this->createGetRequestInformation($requestConfiguration);
        try {
            $errorMappings = [
                    '4XX' => [ODataError::class, 'createFromDiscriminatorValue'],
                    '5XX' => [ODataError::class, 'createFromDiscriminatorValue'],
            ];
            return $this->requestAdapter->sendAsync($requestInfo, [DeviceManagement::class, 'createFromDiscriminatorValue'], $responseHandler, $errorMappings);
        } catch(Exception $ex) {
            return new RejectedPromise($ex);
        }
    }

    /**
     * Provides operations to call the getAssignedRoleDetails method.
     * @return GetAssignedRoleDetailsRequestBuilder
    */
    public function getAssignedRoleDetails(): GetAssignedRoleDetailsRequestBuilder {
        return new GetAssignedRoleDetailsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to call the getComanagedDevicesSummary method.
     * @return GetComanagedDevicesSummaryRequestBuilder
    */
    public function getComanagedDevicesSummary(): GetComanagedDevicesSummaryRequestBuilder {
        return new GetComanagedDevicesSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to call the getComanagementEligibleDevicesSummary method.
     * @return GetComanagementEligibleDevicesSummaryRequestBuilder
    */
    public function getComanagementEligibleDevicesSummary(): GetComanagementEligibleDevicesSummaryRequestBuilder {
        return new GetComanagementEligibleDevicesSummaryRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to call the getEffectivePermissions method.
     * @return GetEffectivePermissionsRequestBuilder
    */
    public function getEffectivePermissions(): GetEffectivePermissionsRequestBuilder {
        return new GetEffectivePermissionsRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to call the getEffectivePermissions method.
     * @param string $scope Usage: scope='{scope}'
     * @return GetEffectivePermissionsWithScopeRequestBuilder
    */
    public function getEffectivePermissionsWithScope(string $scope): GetEffectivePermissionsWithScopeRequestBuilder {
        return new GetEffectivePermissionsWithScopeRequestBuilder($this->pathParameters, $this->requestAdapter, $scope);
    }

    /**
     * Provides operations to call the getRoleScopeTagsByIds method.
     * @param string $ids Usage: ids={ids}
     * @return GetRoleScopeTagsByIdsWithIdsRequestBuilder
    */
    public function getRoleScopeTagsByIdsWithIds(string $ids): GetRoleScopeTagsByIdsWithIdsRequestBuilder {
        return new GetRoleScopeTagsByIdsWithIdsRequestBuilder($this->pathParameters, $this->requestAdapter, $ids);
    }

    /**
     * Provides operations to call the getRoleScopeTagsByResource method.
     * @param string $resource Usage: resource='{resource}'
     * @return GetRoleScopeTagsByResourceWithResourceRequestBuilder
    */
    public function getRoleScopeTagsByResourceWithResource(string $resource): GetRoleScopeTagsByResourceWithResourceRequestBuilder {
        return new GetRoleScopeTagsByResourceWithResourceRequestBuilder($this->pathParameters, $this->requestAdapter, $resource);
    }

    /**
     * Provides operations to call the getSuggestedEnrollmentLimit method.
     * @param string $enrollmentType Usage: enrollmentType='{enrollmentType}'
     * @return GetSuggestedEnrollmentLimitWithEnrollmentTypeRequestBuilder
    */
    public function getSuggestedEnrollmentLimitWithEnrollmentType(string $enrollmentType): GetSuggestedEnrollmentLimitWithEnrollmentTypeRequestBuilder {
        return new GetSuggestedEnrollmentLimitWithEnrollmentTypeRequestBuilder($this->pathParameters, $this->requestAdapter, $enrollmentType);
    }

    /**
     * Provides operations to manage the groupPolicyCategories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyCategoryItemRequestBuilder
    */
    public function groupPolicyCategoriesById(string $id): GroupPolicyCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyCategory%2Did'] = $id;
        return new GroupPolicyCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyConfigurations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyConfigurationItemRequestBuilder
    */
    public function groupPolicyConfigurationsById(string $id): GroupPolicyConfigurationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyConfiguration%2Did'] = $id;
        return new GroupPolicyConfigurationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyDefinitionFiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyDefinitionFileItemRequestBuilder
    */
    public function groupPolicyDefinitionFilesById(string $id): GroupPolicyDefinitionFileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyDefinitionFile%2Did'] = $id;
        return new GroupPolicyDefinitionFileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyDefinitions property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyDefinitionItemRequestBuilder
    */
    public function groupPolicyDefinitionsById(string $id): GroupPolicyDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyDefinition%2Did'] = $id;
        return new GroupPolicyDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyMigrationReports property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyMigrationReportItemRequestBuilder
    */
    public function groupPolicyMigrationReportsById(string $id): GroupPolicyMigrationReportItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyMigrationReport%2Did'] = $id;
        return new GroupPolicyMigrationReportItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyObjectFiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyObjectFileItemRequestBuilder
    */
    public function groupPolicyObjectFilesById(string $id): GroupPolicyObjectFileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyObjectFile%2Did'] = $id;
        return new GroupPolicyObjectFileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the groupPolicyUploadedDefinitionFiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return GroupPolicyUploadedDefinitionFileItemRequestBuilder
    */
    public function groupPolicyUploadedDefinitionFilesById(string $id): GroupPolicyUploadedDefinitionFileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['groupPolicyUploadedDefinitionFile%2Did'] = $id;
        return new GroupPolicyUploadedDefinitionFileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the importedDeviceIdentities property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ImportedDeviceIdentityItemRequestBuilder
    */
    public function importedDeviceIdentitiesById(string $id): ImportedDeviceIdentityItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['importedDeviceIdentity%2Did'] = $id;
        return new ImportedDeviceIdentityItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the importedWindowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ImportedWindowsAutopilotDeviceIdentityItemRequestBuilder
    */
    public function importedWindowsAutopilotDeviceIdentitiesById(string $id): ImportedWindowsAutopilotDeviceIdentityItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['importedWindowsAutopilotDeviceIdentity%2Did'] = $id;
        return new ImportedWindowsAutopilotDeviceIdentityItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the intents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementIntentItemRequestBuilder
    */
    public function intentsById(string $id): DeviceManagementIntentItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementIntent%2Did'] = $id;
        return new DeviceManagementIntentItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the intuneBrandingProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return IntuneBrandingProfileItemRequestBuilder
    */
    public function intuneBrandingProfilesById(string $id): IntuneBrandingProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['intuneBrandingProfile%2Did'] = $id;
        return new IntuneBrandingProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the iosUpdateStatuses property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return IosUpdateDeviceStatusItemRequestBuilder
    */
    public function iosUpdateStatusesById(string $id): IosUpdateDeviceStatusItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['iosUpdateDeviceStatus%2Did'] = $id;
        return new IosUpdateDeviceStatusItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the macOSSoftwareUpdateAccountSummaries property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MacOSSoftwareUpdateAccountSummaryItemRequestBuilder
    */
    public function macOSSoftwareUpdateAccountSummariesById(string $id): MacOSSoftwareUpdateAccountSummaryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['macOSSoftwareUpdateAccountSummary%2Did'] = $id;
        return new MacOSSoftwareUpdateAccountSummaryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the managedDeviceEncryptionStates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ManagedDeviceEncryptionStateItemRequestBuilder
    */
    public function managedDeviceEncryptionStatesById(string $id): ManagedDeviceEncryptionStateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['managedDeviceEncryptionState%2Did'] = $id;
        return new ManagedDeviceEncryptionStateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDevices\Item\ManagedDeviceItemRequestBuilder
    */
    public function managedDevicesById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDevices\Item\ManagedDeviceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['managedDevice%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ManagedDevices\Item\ManagedDeviceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the microsoftTunnelConfigurations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MicrosoftTunnelConfigurationItemRequestBuilder
    */
    public function microsoftTunnelConfigurationsById(string $id): MicrosoftTunnelConfigurationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['microsoftTunnelConfiguration%2Did'] = $id;
        return new MicrosoftTunnelConfigurationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the microsoftTunnelHealthThresholds property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MicrosoftTunnelHealthThresholdItemRequestBuilder
    */
    public function microsoftTunnelHealthThresholdsById(string $id): MicrosoftTunnelHealthThresholdItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['microsoftTunnelHealthThreshold%2Did'] = $id;
        return new MicrosoftTunnelHealthThresholdItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the microsoftTunnelServerLogCollectionResponses property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MicrosoftTunnelServerLogCollectionResponseItemRequestBuilder
    */
    public function microsoftTunnelServerLogCollectionResponsesById(string $id): MicrosoftTunnelServerLogCollectionResponseItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['microsoftTunnelServerLogCollectionResponse%2Did'] = $id;
        return new MicrosoftTunnelServerLogCollectionResponseItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the microsoftTunnelSites property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MicrosoftTunnelSiteItemRequestBuilder
    */
    public function microsoftTunnelSitesById(string $id): MicrosoftTunnelSiteItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['microsoftTunnelSite%2Did'] = $id;
        return new MicrosoftTunnelSiteItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the mobileAppTroubleshootingEvents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MobileAppTroubleshootingEventItemRequestBuilder
    */
    public function mobileAppTroubleshootingEventsById(string $id): MobileAppTroubleshootingEventItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['mobileAppTroubleshootingEvent%2Did'] = $id;
        return new MobileAppTroubleshootingEventItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the mobileThreatDefenseConnectors property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return MobileThreatDefenseConnectorItemRequestBuilder
    */
    public function mobileThreatDefenseConnectorsById(string $id): MobileThreatDefenseConnectorItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['mobileThreatDefenseConnector%2Did'] = $id;
        return new MobileThreatDefenseConnectorItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the ndesConnectors property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return NdesConnectorItemRequestBuilder
    */
    public function ndesConnectorsById(string $id): NdesConnectorItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['ndesConnector%2Did'] = $id;
        return new NdesConnectorItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the notificationMessageTemplates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return NotificationMessageTemplateItemRequestBuilder
    */
    public function notificationMessageTemplatesById(string $id): NotificationMessageTemplateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['notificationMessageTemplate%2Did'] = $id;
        return new NotificationMessageTemplateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the oemWarrantyInformationOnboarding property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return OemWarrantyInformationOnboardingItemRequestBuilder
    */
    public function oemWarrantyInformationOnboardingById(string $id): OemWarrantyInformationOnboardingItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['oemWarrantyInformationOnboarding%2Did'] = $id;
        return new OemWarrantyInformationOnboardingItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Update deviceManagement
     * @param DeviceManagement $body 
     * @param DeviceManagementRequestBuilderPatchRequestConfiguration|null $requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @param ResponseHandler|null $responseHandler Response handler to use in place of the default response handling provided by the core service
     * @return Promise
    */
    public function patch(DeviceManagement $body, ?DeviceManagementRequestBuilderPatchRequestConfiguration $requestConfiguration = null, ?ResponseHandler $responseHandler = null): Promise {
        $requestInfo = $this->createPatchRequestInformation($body, $requestConfiguration);
        try {
            $errorMappings = [
                    '4XX' => [ODataError::class, 'createFromDiscriminatorValue'],
                    '5XX' => [ODataError::class, 'createFromDiscriminatorValue'],
            ];
            return $this->requestAdapter->sendAsync($requestInfo, [DeviceManagement::class, 'createFromDiscriminatorValue'], $responseHandler, $errorMappings);
        } catch(Exception $ex) {
            return new RejectedPromise($ex);
        }
    }

    /**
     * Provides operations to manage the remoteActionAudits property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return RemoteActionAuditItemRequestBuilder
    */
    public function remoteActionAuditsById(string $id): RemoteActionAuditItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['remoteActionAudit%2Did'] = $id;
        return new RemoteActionAuditItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the remoteAssistancePartners property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return RemoteAssistancePartnerItemRequestBuilder
    */
    public function remoteAssistancePartnersById(string $id): RemoteAssistancePartnerItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['remoteAssistancePartner%2Did'] = $id;
        return new RemoteAssistancePartnerItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the resourceAccessProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementResourceAccessProfileBaseItemRequestBuilder
    */
    public function resourceAccessProfilesById(string $id): DeviceManagementResourceAccessProfileBaseItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementResourceAccessProfileBase%2Did'] = $id;
        return new DeviceManagementResourceAccessProfileBaseItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the resourceOperations property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ResourceOperationItemRequestBuilder
    */
    public function resourceOperationsById(string $id): ResourceOperationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['resourceOperation%2Did'] = $id;
        return new ResourceOperationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the reusablePolicySettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementReusablePolicySettingItemRequestBuilder
    */
    public function reusablePolicySettingsById(string $id): DeviceManagementReusablePolicySettingItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementReusablePolicySetting%2Did'] = $id;
        return new DeviceManagementReusablePolicySettingItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the reusableSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\ReusableSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder
    */
    public function reusableSettingsById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\ReusableSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationSettingDefinition%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\ReusableSettings\Item\DeviceManagementConfigurationSettingDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the roleAssignments property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceAndAppManagementRoleAssignmentItemRequestBuilder
    */
    public function roleAssignmentsById(string $id): DeviceAndAppManagementRoleAssignmentItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceAndAppManagementRoleAssignment%2Did'] = $id;
        return new DeviceAndAppManagementRoleAssignmentItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the roleDefinitions property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return RoleDefinitionItemRequestBuilder
    */
    public function roleDefinitionsById(string $id): RoleDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['roleDefinition%2Did'] = $id;
        return new RoleDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the roleScopeTags property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return RoleScopeTagItemRequestBuilder
    */
    public function roleScopeTagsById(string $id): RoleScopeTagItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['roleScopeTag%2Did'] = $id;
        return new RoleScopeTagItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to call the scopedForResource method.
     * @param string $resource Usage: resource='{resource}'
     * @return ScopedForResourceWithResourceRequestBuilder
    */
    public function scopedForResourceWithResource(string $resource): ScopedForResourceWithResourceRequestBuilder {
        return new ScopedForResourceWithResourceRequestBuilder($this->pathParameters, $this->requestAdapter, $resource);
    }

    /**
     * Provides operations to manage the settingDefinitions property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementSettingDefinitionItemRequestBuilder
    */
    public function settingDefinitionsById(string $id): DeviceManagementSettingDefinitionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementSettingDefinition%2Did'] = $id;
        return new DeviceManagementSettingDefinitionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the telecomExpenseManagementPartners property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return TelecomExpenseManagementPartnerItemRequestBuilder
    */
    public function telecomExpenseManagementPartnersById(string $id): TelecomExpenseManagementPartnerItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['telecomExpenseManagementPartner%2Did'] = $id;
        return new TelecomExpenseManagementPartnerItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the templates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementTemplateItemRequestBuilder
    */
    public function templatesById(string $id): DeviceManagementTemplateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementTemplate%2Did'] = $id;
        return new DeviceManagementTemplateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the templateSettings property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementConfigurationSettingTemplateItemRequestBuilder
    */
    public function templateSettingsById(string $id): DeviceManagementConfigurationSettingTemplateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementConfigurationSettingTemplate%2Did'] = $id;
        return new DeviceManagementConfigurationSettingTemplateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the termsAndConditions property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return TermsAndConditionsItemRequestBuilder
    */
    public function termsAndConditionsById(string $id): TermsAndConditionsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['termsAndConditions%2Did'] = $id;
        return new TermsAndConditionsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the troubleshootingEvents property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return DeviceManagementTroubleshootingEventItemRequestBuilder
    */
    public function troubleshootingEventsById(string $id): DeviceManagementTroubleshootingEventItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['deviceManagementTroubleshootingEvent%2Did'] = $id;
        return new DeviceManagementTroubleshootingEventItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAnomaly property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAnomalyItemRequestBuilder
    */
    public function userExperienceAnalyticsAnomalyById(string $id): UserExperienceAnalyticsAnomalyItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAnomaly%2Did'] = $id;
        return new UserExperienceAnalyticsAnomalyItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAnomalyDevice property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAnomalyDeviceItemRequestBuilder
    */
    public function userExperienceAnalyticsAnomalyDeviceById(string $id): UserExperienceAnalyticsAnomalyDeviceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAnomalyDevice%2Did'] = $id;
        return new UserExperienceAnalyticsAnomalyDeviceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionById(string $id): UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthAppPerformanceByAppVersion%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsById(string $id): UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetailsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIdItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdById(string $id): UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIdItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceIdItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthApplicationPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceById(string $id): UserExperienceAnalyticsAppHealthApplicationPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthApplicationPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthApplicationPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionById(string $id): UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthAppPerformanceByOSVersion%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthAppPerformanceByOSVersionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDeviceModelPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthDeviceModelPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthDeviceModelPerformanceById(string $id): UserExperienceAnalyticsAppHealthDeviceModelPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthDeviceModelPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthDeviceModelPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthDevicePerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthDevicePerformanceById(string $id): UserExperienceAnalyticsAppHealthDevicePerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthDevicePerformance%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthDevicePerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformanceDetails property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthDevicePerformanceDetailsItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthDevicePerformanceDetailsById(string $id): UserExperienceAnalyticsAppHealthDevicePerformanceDetailsItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthDevicePerformanceDetails%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthDevicePerformanceDetailsItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthOSVersionPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsAppHealthOSVersionPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsAppHealthOSVersionPerformanceById(string $id): UserExperienceAnalyticsAppHealthOSVersionPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsAppHealthOSVersionPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsAppHealthOSVersionPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBaselines property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBaselineItemRequestBuilder
    */
    public function userExperienceAnalyticsBaselinesById(string $id): UserExperienceAnalyticsBaselineItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBaseline%2Did'] = $id;
        return new UserExperienceAnalyticsBaselineItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthAppImpact property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthAppImpactItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthAppImpactById(string $id): UserExperienceAnalyticsBatteryHealthAppImpactItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthAppImpact%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthAppImpactItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDeviceAppImpact property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthDeviceAppImpactItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthDeviceAppImpactById(string $id): UserExperienceAnalyticsBatteryHealthDeviceAppImpactItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthDeviceAppImpact%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthDeviceAppImpactItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDevicePerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthDevicePerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthDevicePerformanceById(string $id): UserExperienceAnalyticsBatteryHealthDevicePerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthDevicePerformance%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthDevicePerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryById(string $id): UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthDeviceRuntimeHistory%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthDeviceRuntimeHistoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthModelPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthModelPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthModelPerformanceById(string $id): UserExperienceAnalyticsBatteryHealthModelPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthModelPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthModelPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsBatteryHealthOsPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsBatteryHealthOsPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsBatteryHealthOsPerformanceById(string $id): UserExperienceAnalyticsBatteryHealthOsPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsBatteryHealthOsPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsBatteryHealthOsPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsCategories property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsCategoryItemRequestBuilder
    */
    public function userExperienceAnalyticsCategoriesById(string $id): UserExperienceAnalyticsCategoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsCategory%2Did'] = $id;
        return new UserExperienceAnalyticsCategoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceMetricHistory property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceMetricHistoryById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsMetricHistory%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsDeviceMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDevicePerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDevicePerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsDevicePerformanceById(string $id): UserExperienceAnalyticsDevicePerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDevicePerformance%2Did'] = $id;
        return new UserExperienceAnalyticsDevicePerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScopes property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceScopeItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceScopesById(string $id): UserExperienceAnalyticsDeviceScopeItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceScope%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceScopeItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScores property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceScoresItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceScoresById(string $id): UserExperienceAnalyticsDeviceScoresItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceScores%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceScoresItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceStartupHistoryById(string $id): UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceStartupHistory%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcesses property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceStartupProcessItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceStartupProcessesById(string $id): UserExperienceAnalyticsDeviceStartupProcessItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceStartupProcess%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceStartupProcessItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcessPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceStartupProcessPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsDeviceStartupProcessPerformanceById(string $id): UserExperienceAnalyticsDeviceStartupProcessPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceStartupProcessPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceStartupProcessPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsDevicesWithoutCloudIdentity property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsDeviceWithoutCloudIdentityItemRequestBuilder
    */
    public function userExperienceAnalyticsDevicesWithoutCloudIdentityById(string $id): UserExperienceAnalyticsDeviceWithoutCloudIdentityItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsDeviceWithoutCloudIdentity%2Did'] = $id;
        return new UserExperienceAnalyticsDeviceWithoutCloudIdentityItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsImpactingProcess property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsImpactingProcessItemRequestBuilder
    */
    public function userExperienceAnalyticsImpactingProcessById(string $id): UserExperienceAnalyticsImpactingProcessItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsImpactingProcess%2Did'] = $id;
        return new UserExperienceAnalyticsImpactingProcessItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsMetricHistory property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder
    */
    public function userExperienceAnalyticsMetricHistoryById(string $id): \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsMetricHistory%2Did'] = $id;
        return new \Microsoft\Graph\Beta\Generated\DeviceManagement\UserExperienceAnalyticsMetricHistory\Item\UserExperienceAnalyticsMetricHistoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsModelScores property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsModelScoresItemRequestBuilder
    */
    public function userExperienceAnalyticsModelScoresById(string $id): UserExperienceAnalyticsModelScoresItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsModelScores%2Did'] = $id;
        return new UserExperienceAnalyticsModelScoresItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsNotAutopilotReadyDevice property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsNotAutopilotReadyDeviceItemRequestBuilder
    */
    public function userExperienceAnalyticsNotAutopilotReadyDeviceById(string $id): UserExperienceAnalyticsNotAutopilotReadyDeviceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsNotAutopilotReadyDevice%2Did'] = $id;
        return new UserExperienceAnalyticsNotAutopilotReadyDeviceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsRemoteConnection property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsRemoteConnectionItemRequestBuilder
    */
    public function userExperienceAnalyticsRemoteConnectionById(string $id): UserExperienceAnalyticsRemoteConnectionItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsRemoteConnection%2Did'] = $id;
        return new UserExperienceAnalyticsRemoteConnectionItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsResourcePerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsResourcePerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsResourcePerformanceById(string $id): UserExperienceAnalyticsResourcePerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsResourcePerformance%2Did'] = $id;
        return new UserExperienceAnalyticsResourcePerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsScoreHistory property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsScoreHistoryItemRequestBuilder
    */
    public function userExperienceAnalyticsScoreHistoryById(string $id): UserExperienceAnalyticsScoreHistoryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsScoreHistory%2Did'] = $id;
        return new UserExperienceAnalyticsScoreHistoryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to call the userExperienceAnalyticsSummarizedDeviceScopes method.
     * @return UserExperienceAnalyticsSummarizedDeviceScopesRequestBuilder
    */
    public function userExperienceAnalyticsSummarizedDeviceScopes(): UserExperienceAnalyticsSummarizedDeviceScopesRequestBuilder {
        return new UserExperienceAnalyticsSummarizedDeviceScopesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to call the userExperienceAnalyticsSummarizeWorkFromAnywhereDevices method.
     * @return UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder
    */
    public function userExperienceAnalyticsSummarizeWorkFromAnywhereDevices(): UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder {
        return new UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder($this->pathParameters, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereMetrics property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsWorkFromAnywhereMetricItemRequestBuilder
    */
    public function userExperienceAnalyticsWorkFromAnywhereMetricsById(string $id): UserExperienceAnalyticsWorkFromAnywhereMetricItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsWorkFromAnywhereMetric%2Did'] = $id;
        return new UserExperienceAnalyticsWorkFromAnywhereMetricItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereModelPerformance property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserExperienceAnalyticsWorkFromAnywhereModelPerformanceItemRequestBuilder
    */
    public function userExperienceAnalyticsWorkFromAnywhereModelPerformanceById(string $id): UserExperienceAnalyticsWorkFromAnywhereModelPerformanceItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userExperienceAnalyticsWorkFromAnywhereModelPerformance%2Did'] = $id;
        return new UserExperienceAnalyticsWorkFromAnywhereModelPerformanceItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the userPfxCertificates property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return UserPFXCertificateItemRequestBuilder
    */
    public function userPfxCertificatesById(string $id): UserPFXCertificateItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['userPFXCertificate%2Did'] = $id;
        return new UserPFXCertificateItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to call the verifyWindowsEnrollmentAutoDiscovery method.
     * @param string $domainName Usage: domainName='{domainName}'
     * @return VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder
    */
    public function verifyWindowsEnrollmentAutoDiscoveryWithDomainName(string $domainName): VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder {
        return new VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder($this->pathParameters, $this->requestAdapter, $domainName);
    }

    /**
     * Provides operations to manage the windowsAutopilotDeploymentProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsAutopilotDeploymentProfileItemRequestBuilder
    */
    public function windowsAutopilotDeploymentProfilesById(string $id): WindowsAutopilotDeploymentProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsAutopilotDeploymentProfile%2Did'] = $id;
        return new WindowsAutopilotDeploymentProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsAutopilotDeviceIdentityItemRequestBuilder
    */
    public function windowsAutopilotDeviceIdentitiesById(string $id): WindowsAutopilotDeviceIdentityItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsAutopilotDeviceIdentity%2Did'] = $id;
        return new WindowsAutopilotDeviceIdentityItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsDriverUpdateProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsDriverUpdateProfileItemRequestBuilder
    */
    public function windowsDriverUpdateProfilesById(string $id): WindowsDriverUpdateProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsDriverUpdateProfile%2Did'] = $id;
        return new WindowsDriverUpdateProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsFeatureUpdateProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsFeatureUpdateProfileItemRequestBuilder
    */
    public function windowsFeatureUpdateProfilesById(string $id): WindowsFeatureUpdateProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsFeatureUpdateProfile%2Did'] = $id;
        return new WindowsFeatureUpdateProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsInformationProtectionAppLearningSummaries property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsInformationProtectionAppLearningSummaryItemRequestBuilder
    */
    public function windowsInformationProtectionAppLearningSummariesById(string $id): WindowsInformationProtectionAppLearningSummaryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsInformationProtectionAppLearningSummary%2Did'] = $id;
        return new WindowsInformationProtectionAppLearningSummaryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsInformationProtectionNetworkLearningSummaries property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsInformationProtectionNetworkLearningSummaryItemRequestBuilder
    */
    public function windowsInformationProtectionNetworkLearningSummariesById(string $id): WindowsInformationProtectionNetworkLearningSummaryItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsInformationProtectionNetworkLearningSummary%2Did'] = $id;
        return new WindowsInformationProtectionNetworkLearningSummaryItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsMalwareInformation property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsMalwareInformationItemRequestBuilder
    */
    public function windowsMalwareInformationById(string $id): WindowsMalwareInformationItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsMalwareInformation%2Did'] = $id;
        return new WindowsMalwareInformationItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsQualityUpdateProfiles property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsQualityUpdateProfileItemRequestBuilder
    */
    public function windowsQualityUpdateProfilesById(string $id): WindowsQualityUpdateProfileItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsQualityUpdateProfile%2Did'] = $id;
        return new WindowsQualityUpdateProfileItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the windowsUpdateCatalogItems property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return WindowsUpdateCatalogItemItemRequestBuilder
    */
    public function windowsUpdateCatalogItemsById(string $id): WindowsUpdateCatalogItemItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['windowsUpdateCatalogItem%2Did'] = $id;
        return new WindowsUpdateCatalogItemItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the zebraFotaArtifacts property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ZebraFotaArtifactItemRequestBuilder
    */
    public function zebraFotaArtifactsById(string $id): ZebraFotaArtifactItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['zebraFotaArtifact%2Did'] = $id;
        return new ZebraFotaArtifactItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

    /**
     * Provides operations to manage the zebraFotaDeployments property of the microsoft.graph.deviceManagement entity.
     * @param string $id Unique identifier of the item
     * @return ZebraFotaDeploymentItemRequestBuilder
    */
    public function zebraFotaDeploymentsById(string $id): ZebraFotaDeploymentItemRequestBuilder {
        $urlTplParams = $this->pathParameters;
        $urlTplParams['zebraFotaDeployment%2Did'] = $id;
        return new ZebraFotaDeploymentItemRequestBuilder($urlTplParams, $this->requestAdapter);
    }

}
