<?php

namespace Microsoft\Graph\Beta\Generated\Models;

use Microsoft\Kiota\Abstractions\Serialization\AdditionalDataHolder;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class MalwareState implements AdditionalDataHolder, Parsable 
{
    /**
     * @var array<string, mixed> $AdditionalData Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    */
    private array $additionalData;
    
    /**
     * @var string|null $category Provider-generated malware category (for example, trojan, ransomware, etc.).
    */
    private ?string $category = null;
    
    /**
     * @var string|null $family Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
    */
    private ?string $family = null;
    
    /**
     * @var string|null $name Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
    */
    private ?string $name = null;
    
    /**
     * @var string|null $severity Provider-determined severity of this malware.
    */
    private ?string $severity = null;
    
    /**
     * @var bool|null $wasRunning Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
    */
    private ?bool $wasRunning = null;
    
    /**
     * Instantiates a new malwareState and sets the default values.
    */
    public function __construct() {
        $this->additionalData = [];
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return MalwareState
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): MalwareState {
        return new MalwareState();
    }

    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return array<string, mixed>
    */
    public function getAdditionalData(): array {
        return $this->additionalData;
    }

    /**
     * Gets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
     * @return string|null
    */
    public function getCategory(): ?string {
        return $this->category;
    }

    /**
     * Gets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
     * @return string|null
    */
    public function getFamily(): ?string {
        return $this->family;
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return  [
            'category' => function (ParseNode $n) use ($o) { $o->setCategory($n->getStringValue()); },
            'family' => function (ParseNode $n) use ($o) { $o->setFamily($n->getStringValue()); },
            'name' => function (ParseNode $n) use ($o) { $o->setName($n->getStringValue()); },
            'severity' => function (ParseNode $n) use ($o) { $o->setSeverity($n->getStringValue()); },
            'wasRunning' => function (ParseNode $n) use ($o) { $o->setWasRunning($n->getBooleanValue()); },
        ];
    }

    /**
     * Gets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
     * @return string|null
    */
    public function getName(): ?string {
        return $this->name;
    }

    /**
     * Gets the severity property value. Provider-determined severity of this malware.
     * @return string|null
    */
    public function getSeverity(): ?string {
        return $this->severity;
    }

    /**
     * Gets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
     * @return bool|null
    */
    public function getWasRunning(): ?bool {
        return $this->wasRunning;
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        $writer->writeStringValue('category', $this->category);
        $writer->writeStringValue('family', $this->family);
        $writer->writeStringValue('name', $this->name);
        $writer->writeStringValue('severity', $this->severity);
        $writer->writeBooleanValue('wasRunning', $this->wasRunning);
        $writer->writeAdditionalData($this->additionalData);
    }

    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     *  @param array<string,mixed> $value Value to set for the AdditionalData property.
    */
    public function setAdditionalData(?array $value ): void {
        $this->additionalData = $value;
    }

    /**
     * Sets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
     *  @param string|null $value Value to set for the category property.
    */
    public function setCategory(?string $value ): void {
        $this->category = $value;
    }

    /**
     * Sets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
     *  @param string|null $value Value to set for the family property.
    */
    public function setFamily(?string $value ): void {
        $this->family = $value;
    }

    /**
     * Sets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
     *  @param string|null $value Value to set for the name property.
    */
    public function setName(?string $value ): void {
        $this->name = $value;
    }

    /**
     * Sets the severity property value. Provider-determined severity of this malware.
     *  @param string|null $value Value to set for the severity property.
    */
    public function setSeverity(?string $value ): void {
        $this->severity = $value;
    }

    /**
     * Sets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
     *  @param bool|null $value Value to set for the wasRunning property.
    */
    public function setWasRunning(?bool $value ): void {
        $this->wasRunning = $value;
    }

}
