<?php

namespace Microsoft\Graph\Beta\Generated\Models;

use DateTime;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class WindowsMalwareInformation extends Entity implements Parsable 
{
    /**
     * @var string|null $additionalInformationUrl Information URL to learn more about the malware
    */
    private ?string $additionalInformationUrl = null;
    
    /**
     * @var WindowsMalwareCategory|null $category Category of the malware. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remote_Control_Software, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule.
    */
    private ?WindowsMalwareCategory $category = null;
    
    /**
     * @var array<MalwareStateForWindowsDevice>|null $deviceMalwareStates List of devices affected by current malware with the malware state on each device
    */
    private ?array $deviceMalwareStates = null;
    
    /**
     * @var string|null $displayName Malware name
    */
    private ?string $displayName = null;
    
    /**
     * @var DateTime|null $lastDetectionDateTime The last time the malware is detected
    */
    private ?DateTime $lastDetectionDateTime = null;
    
    /**
     * @var WindowsMalwareSeverity|null $severity Severity of the malware. Possible values are: unknown, low, moderate, high, severe.
    */
    private ?WindowsMalwareSeverity $severity = null;
    
    /**
     * Instantiates a new windowsMalwareInformation and sets the default values.
    */
    public function __construct() {
        parent::__construct();
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return WindowsMalwareInformation
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): WindowsMalwareInformation {
        return new WindowsMalwareInformation();
    }

    /**
     * Gets the additionalInformationUrl property value. Information URL to learn more about the malware
     * @return string|null
    */
    public function getAdditionalInformationUrl(): ?string {
        return $this->additionalInformationUrl;
    }

    /**
     * Gets the category property value. Category of the malware. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remote_Control_Software, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule.
     * @return WindowsMalwareCategory|null
    */
    public function getCategory(): ?WindowsMalwareCategory {
        return $this->category;
    }

    /**
     * Gets the deviceMalwareStates property value. List of devices affected by current malware with the malware state on each device
     * @return array<MalwareStateForWindowsDevice>|null
    */
    public function getDeviceMalwareStates(): ?array {
        return $this->deviceMalwareStates;
    }

    /**
     * Gets the displayName property value. Malware name
     * @return string|null
    */
    public function getDisplayName(): ?string {
        return $this->displayName;
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return array_merge(parent::getFieldDeserializers(), [
            'additionalInformationUrl' => function (ParseNode $n) use ($o) { $o->setAdditionalInformationUrl($n->getStringValue()); },
            'category' => function (ParseNode $n) use ($o) { $o->setCategory($n->getEnumValue(WindowsMalwareCategory::class)); },
            'deviceMalwareStates' => function (ParseNode $n) use ($o) { $o->setDeviceMalwareStates($n->getCollectionOfObjectValues(array(MalwareStateForWindowsDevice::class, 'createFromDiscriminatorValue'))); },
            'displayName' => function (ParseNode $n) use ($o) { $o->setDisplayName($n->getStringValue()); },
            'lastDetectionDateTime' => function (ParseNode $n) use ($o) { $o->setLastDetectionDateTime($n->getDateTimeValue()); },
            'severity' => function (ParseNode $n) use ($o) { $o->setSeverity($n->getEnumValue(WindowsMalwareSeverity::class)); },
        ]);
    }

    /**
     * Gets the lastDetectionDateTime property value. The last time the malware is detected
     * @return DateTime|null
    */
    public function getLastDetectionDateTime(): ?DateTime {
        return $this->lastDetectionDateTime;
    }

    /**
     * Gets the severity property value. Severity of the malware. Possible values are: unknown, low, moderate, high, severe.
     * @return WindowsMalwareSeverity|null
    */
    public function getSeverity(): ?WindowsMalwareSeverity {
        return $this->severity;
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        parent::serialize($writer);
        $writer->writeStringValue('additionalInformationUrl', $this->additionalInformationUrl);
        $writer->writeEnumValue('category', $this->category);
        $writer->writeCollectionOfObjectValues('deviceMalwareStates', $this->deviceMalwareStates);
        $writer->writeStringValue('displayName', $this->displayName);
        $writer->writeDateTimeValue('lastDetectionDateTime', $this->lastDetectionDateTime);
        $writer->writeEnumValue('severity', $this->severity);
    }

    /**
     * Sets the additionalInformationUrl property value. Information URL to learn more about the malware
     *  @param string|null $value Value to set for the additionalInformationUrl property.
    */
    public function setAdditionalInformationUrl(?string $value ): void {
        $this->additionalInformationUrl = $value;
    }

    /**
     * Sets the category property value. Category of the malware. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remote_Control_Software, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule.
     *  @param WindowsMalwareCategory|null $value Value to set for the category property.
    */
    public function setCategory(?WindowsMalwareCategory $value ): void {
        $this->category = $value;
    }

    /**
     * Sets the deviceMalwareStates property value. List of devices affected by current malware with the malware state on each device
     *  @param array<MalwareStateForWindowsDevice>|null $value Value to set for the deviceMalwareStates property.
    */
    public function setDeviceMalwareStates(?array $value ): void {
        $this->deviceMalwareStates = $value;
    }

    /**
     * Sets the displayName property value. Malware name
     *  @param string|null $value Value to set for the displayName property.
    */
    public function setDisplayName(?string $value ): void {
        $this->displayName = $value;
    }

    /**
     * Sets the lastDetectionDateTime property value. The last time the malware is detected
     *  @param DateTime|null $value Value to set for the lastDetectionDateTime property.
    */
    public function setLastDetectionDateTime(?DateTime $value ): void {
        $this->lastDetectionDateTime = $value;
    }

    /**
     * Sets the severity property value. Severity of the malware. Possible values are: unknown, low, moderate, high, severe.
     *  @param WindowsMalwareSeverity|null $value Value to set for the severity property.
    */
    public function setSeverity(?WindowsMalwareSeverity $value ): void {
        $this->severity = $value;
    }

}
