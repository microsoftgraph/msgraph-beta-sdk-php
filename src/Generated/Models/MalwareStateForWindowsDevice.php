<?php

namespace Microsoft\Graph\Beta\Generated\Models;

use DateTime;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class MalwareStateForWindowsDevice extends Entity implements Parsable 
{
    /**
     * @var int|null $detectionCount Number of times the malware is detected
    */
    private ?int $detectionCount = null;
    
    /**
     * @var string|null $deviceName Device name
    */
    private ?string $deviceName = null;
    
    /**
     * @var WindowsMalwareExecutionState|null $executionState Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
    */
    private ?WindowsMalwareExecutionState $executionState = null;
    
    /**
     * @var DateTime|null $initialDetectionDateTime Initial detection datetime of the malware
    */
    private ?DateTime $initialDetectionDateTime = null;
    
    /**
     * @var DateTime|null $lastStateChangeDateTime The last time this particular threat was changed
    */
    private ?DateTime $lastStateChangeDateTime = null;
    
    /**
     * @var WindowsMalwareThreatState|null $threatState Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
    */
    private ?WindowsMalwareThreatState $threatState = null;
    
    /**
     * Instantiates a new malwareStateForWindowsDevice and sets the default values.
    */
    public function __construct() {
        parent::__construct();
        $this->setOdataType('#microsoft.graph.malwareStateForWindowsDevice');
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return MalwareStateForWindowsDevice
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): MalwareStateForWindowsDevice {
        return new MalwareStateForWindowsDevice();
    }

    /**
     * Gets the detectionCount property value. Number of times the malware is detected
     * @return int|null
    */
    public function getDetectionCount(): ?int {
        return $this->detectionCount;
    }

    /**
     * Gets the deviceName property value. Device name
     * @return string|null
    */
    public function getDeviceName(): ?string {
        return $this->deviceName;
    }

    /**
     * Gets the executionState property value. Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
     * @return WindowsMalwareExecutionState|null
    */
    public function getExecutionState(): ?WindowsMalwareExecutionState {
        return $this->executionState;
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return array_merge(parent::getFieldDeserializers(), [
            'detectionCount' => function (ParseNode $n) use ($o) { $o->setDetectionCount($n->getIntegerValue()); },
            'deviceName' => function (ParseNode $n) use ($o) { $o->setDeviceName($n->getStringValue()); },
            'executionState' => function (ParseNode $n) use ($o) { $o->setExecutionState($n->getEnumValue(WindowsMalwareExecutionState::class)); },
            'initialDetectionDateTime' => function (ParseNode $n) use ($o) { $o->setInitialDetectionDateTime($n->getDateTimeValue()); },
            'lastStateChangeDateTime' => function (ParseNode $n) use ($o) { $o->setLastStateChangeDateTime($n->getDateTimeValue()); },
            'threatState' => function (ParseNode $n) use ($o) { $o->setThreatState($n->getEnumValue(WindowsMalwareThreatState::class)); },
        ]);
    }

    /**
     * Gets the initialDetectionDateTime property value. Initial detection datetime of the malware
     * @return DateTime|null
    */
    public function getInitialDetectionDateTime(): ?DateTime {
        return $this->initialDetectionDateTime;
    }

    /**
     * Gets the lastStateChangeDateTime property value. The last time this particular threat was changed
     * @return DateTime|null
    */
    public function getLastStateChangeDateTime(): ?DateTime {
        return $this->lastStateChangeDateTime;
    }

    /**
     * Gets the threatState property value. Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
     * @return WindowsMalwareThreatState|null
    */
    public function getThreatState(): ?WindowsMalwareThreatState {
        return $this->threatState;
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        parent::serialize($writer);
        $writer->writeIntegerValue('detectionCount', $this->detectionCount);
        $writer->writeStringValue('deviceName', $this->deviceName);
        $writer->writeEnumValue('executionState', $this->executionState);
        $writer->writeDateTimeValue('initialDetectionDateTime', $this->initialDetectionDateTime);
        $writer->writeDateTimeValue('lastStateChangeDateTime', $this->lastStateChangeDateTime);
        $writer->writeEnumValue('threatState', $this->threatState);
    }

    /**
     * Sets the detectionCount property value. Number of times the malware is detected
     *  @param int|null $value Value to set for the detectionCount property.
    */
    public function setDetectionCount(?int $value ): void {
        $this->detectionCount = $value;
    }

    /**
     * Sets the deviceName property value. Device name
     *  @param string|null $value Value to set for the deviceName property.
    */
    public function setDeviceName(?string $value ): void {
        $this->deviceName = $value;
    }

    /**
     * Sets the executionState property value. Execution status of the malware like blocked/executing etc. Possible values are: unknown, blocked, allowed, running, notRunning.
     *  @param WindowsMalwareExecutionState|null $value Value to set for the executionState property.
    */
    public function setExecutionState(?WindowsMalwareExecutionState $value ): void {
        $this->executionState = $value;
    }

    /**
     * Sets the initialDetectionDateTime property value. Initial detection datetime of the malware
     *  @param DateTime|null $value Value to set for the initialDetectionDateTime property.
    */
    public function setInitialDetectionDateTime(?DateTime $value ): void {
        $this->initialDetectionDateTime = $value;
    }

    /**
     * Sets the lastStateChangeDateTime property value. The last time this particular threat was changed
     *  @param DateTime|null $value Value to set for the lastStateChangeDateTime property.
    */
    public function setLastStateChangeDateTime(?DateTime $value ): void {
        $this->lastStateChangeDateTime = $value;
    }

    /**
     * Sets the threatState property value. Threat status of the malware like cleaned/quarantined/allowed etc. Possible values are: active, actionFailed, manualStepsRequired, fullScanRequired, rebootRequired, remediatedWithNonCriticalFailures, quarantined, removed, cleaned, allowed, noStatusCleared.
     *  @param WindowsMalwareThreatState|null $value Value to set for the threatState property.
    */
    public function setThreatState(?WindowsMalwareThreatState $value ): void {
        $this->threatState = $value;
    }

}
