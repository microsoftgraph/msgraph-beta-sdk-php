<?php

namespace Microsoft\Graph\Beta\Generated\Models\ManagedTenants;

use DateTime;
use Microsoft\Graph\Beta\Generated\Models\Entity;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class WindowsDeviceMalwareState extends Entity implements Parsable 
{
    /**
     * @var string|null $additionalInformationUrl The additional information URL for the discovered malware. Optional. Read-only.
    */
    private ?string $additionalInformationUrl = null;
    
    /**
     * @var int|null $detectionCount The number of times the piece of malware has been detected. Optional. Read-only.
    */
    private ?int $detectionCount = null;
    
    /**
     * @var bool|null $deviceDeleted A flag indicating whether the device has been deleted. Optional. Read-only.
    */
    private ?bool $deviceDeleted = null;
    
    /**
     * @var DateTime|null $initialDetectionDateTime The date and time the piece of malware was initially detected. Optional. Read-only.
    */
    private ?DateTime $initialDetectionDateTime = null;
    
    /**
     * @var DateTime|null $lastRefreshedDateTime Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
    */
    private ?DateTime $lastRefreshedDateTime = null;
    
    /**
     * @var DateTime|null $lastStateChangeDateTime The date and time the malware state was last changed. Optional. Read-only.
    */
    private ?DateTime $lastStateChangeDateTime = null;
    
    /**
     * @var string|null $malwareCategory The category for the detected malware. Optional. Read-only.
    */
    private ?string $malwareCategory = null;
    
    /**
     * @var string|null $malwareDisplayName The display name for the detected malware. Optional. Read-only.
    */
    private ?string $malwareDisplayName = null;
    
    /**
     * @var string|null $malwareExecutionState The execution state for the detected malware. Optional. Read-only.
    */
    private ?string $malwareExecutionState = null;
    
    /**
     * @var string|null $malwareId The unique identifier for the detected malware. Optional. Read-only.
    */
    private ?string $malwareId = null;
    
    /**
     * @var string|null $malwareSeverity The severity for the detected malware. Optional. Read-only.
    */
    private ?string $malwareSeverity = null;
    
    /**
     * @var string|null $malwareThreatState The threat state for the detected malware. Optional. Read-only.
    */
    private ?string $malwareThreatState = null;
    
    /**
     * @var string|null $managedDeviceId The identifier for the managed device where the malware was detected. Optional. Read-only.
    */
    private ?string $managedDeviceId = null;
    
    /**
     * @var string|null $managedDeviceName The display name for the managed device where the malware was detected. Optional. Read-only.
    */
    private ?string $managedDeviceName = null;
    
    /**
     * @var string|null $tenantDisplayName The display name for the managed tenant. Optional. Read-only.
    */
    private ?string $tenantDisplayName = null;
    
    /**
     * @var string|null $tenantId The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
    */
    private ?string $tenantId = null;
    
    /**
     * Instantiates a new windowsDeviceMalwareState and sets the default values.
    */
    public function __construct() {
        parent::__construct();
        $this->setOdataType('#microsoft.graph.managedTenants.windowsDeviceMalwareState');
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return WindowsDeviceMalwareState
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): WindowsDeviceMalwareState {
        return new WindowsDeviceMalwareState();
    }

    /**
     * Gets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
     * @return string|null
    */
    public function getAdditionalInformationUrl(): ?string {
        return $this->additionalInformationUrl;
    }

    /**
     * Gets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
     * @return int|null
    */
    public function getDetectionCount(): ?int {
        return $this->detectionCount;
    }

    /**
     * Gets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
     * @return bool|null
    */
    public function getDeviceDeleted(): ?bool {
        return $this->deviceDeleted;
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return array_merge(parent::getFieldDeserializers(), [
            'additionalInformationUrl' => function (ParseNode $n) use ($o) { $o->setAdditionalInformationUrl($n->getStringValue()); },
            'detectionCount' => function (ParseNode $n) use ($o) { $o->setDetectionCount($n->getIntegerValue()); },
            'deviceDeleted' => function (ParseNode $n) use ($o) { $o->setDeviceDeleted($n->getBooleanValue()); },
            'initialDetectionDateTime' => function (ParseNode $n) use ($o) { $o->setInitialDetectionDateTime($n->getDateTimeValue()); },
            'lastRefreshedDateTime' => function (ParseNode $n) use ($o) { $o->setLastRefreshedDateTime($n->getDateTimeValue()); },
            'lastStateChangeDateTime' => function (ParseNode $n) use ($o) { $o->setLastStateChangeDateTime($n->getDateTimeValue()); },
            'malwareCategory' => function (ParseNode $n) use ($o) { $o->setMalwareCategory($n->getStringValue()); },
            'malwareDisplayName' => function (ParseNode $n) use ($o) { $o->setMalwareDisplayName($n->getStringValue()); },
            'malwareExecutionState' => function (ParseNode $n) use ($o) { $o->setMalwareExecutionState($n->getStringValue()); },
            'malwareId' => function (ParseNode $n) use ($o) { $o->setMalwareId($n->getStringValue()); },
            'malwareSeverity' => function (ParseNode $n) use ($o) { $o->setMalwareSeverity($n->getStringValue()); },
            'malwareThreatState' => function (ParseNode $n) use ($o) { $o->setMalwareThreatState($n->getStringValue()); },
            'managedDeviceId' => function (ParseNode $n) use ($o) { $o->setManagedDeviceId($n->getStringValue()); },
            'managedDeviceName' => function (ParseNode $n) use ($o) { $o->setManagedDeviceName($n->getStringValue()); },
            'tenantDisplayName' => function (ParseNode $n) use ($o) { $o->setTenantDisplayName($n->getStringValue()); },
            'tenantId' => function (ParseNode $n) use ($o) { $o->setTenantId($n->getStringValue()); },
        ]);
    }

    /**
     * Gets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
     * @return DateTime|null
    */
    public function getInitialDetectionDateTime(): ?DateTime {
        return $this->initialDetectionDateTime;
    }

    /**
     * Gets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     * @return DateTime|null
    */
    public function getLastRefreshedDateTime(): ?DateTime {
        return $this->lastRefreshedDateTime;
    }

    /**
     * Gets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
     * @return DateTime|null
    */
    public function getLastStateChangeDateTime(): ?DateTime {
        return $this->lastStateChangeDateTime;
    }

    /**
     * Gets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareCategory(): ?string {
        return $this->malwareCategory;
    }

    /**
     * Gets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareDisplayName(): ?string {
        return $this->malwareDisplayName;
    }

    /**
     * Gets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareExecutionState(): ?string {
        return $this->malwareExecutionState;
    }

    /**
     * Gets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareId(): ?string {
        return $this->malwareId;
    }

    /**
     * Gets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareSeverity(): ?string {
        return $this->malwareSeverity;
    }

    /**
     * Gets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
     * @return string|null
    */
    public function getMalwareThreatState(): ?string {
        return $this->malwareThreatState;
    }

    /**
     * Gets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
     * @return string|null
    */
    public function getManagedDeviceId(): ?string {
        return $this->managedDeviceId;
    }

    /**
     * Gets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
     * @return string|null
    */
    public function getManagedDeviceName(): ?string {
        return $this->managedDeviceName;
    }

    /**
     * Gets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
     * @return string|null
    */
    public function getTenantDisplayName(): ?string {
        return $this->tenantDisplayName;
    }

    /**
     * Gets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
     * @return string|null
    */
    public function getTenantId(): ?string {
        return $this->tenantId;
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        parent::serialize($writer);
        $writer->writeStringValue('additionalInformationUrl', $this->additionalInformationUrl);
        $writer->writeIntegerValue('detectionCount', $this->detectionCount);
        $writer->writeBooleanValue('deviceDeleted', $this->deviceDeleted);
        $writer->writeDateTimeValue('initialDetectionDateTime', $this->initialDetectionDateTime);
        $writer->writeDateTimeValue('lastRefreshedDateTime', $this->lastRefreshedDateTime);
        $writer->writeDateTimeValue('lastStateChangeDateTime', $this->lastStateChangeDateTime);
        $writer->writeStringValue('malwareCategory', $this->malwareCategory);
        $writer->writeStringValue('malwareDisplayName', $this->malwareDisplayName);
        $writer->writeStringValue('malwareExecutionState', $this->malwareExecutionState);
        $writer->writeStringValue('malwareId', $this->malwareId);
        $writer->writeStringValue('malwareSeverity', $this->malwareSeverity);
        $writer->writeStringValue('malwareThreatState', $this->malwareThreatState);
        $writer->writeStringValue('managedDeviceId', $this->managedDeviceId);
        $writer->writeStringValue('managedDeviceName', $this->managedDeviceName);
        $writer->writeStringValue('tenantDisplayName', $this->tenantDisplayName);
        $writer->writeStringValue('tenantId', $this->tenantId);
    }

    /**
     * Sets the additionalInformationUrl property value. The additional information URL for the discovered malware. Optional. Read-only.
     *  @param string|null $value Value to set for the additionalInformationUrl property.
    */
    public function setAdditionalInformationUrl(?string $value ): void {
        $this->additionalInformationUrl = $value;
    }

    /**
     * Sets the detectionCount property value. The number of times the piece of malware has been detected. Optional. Read-only.
     *  @param int|null $value Value to set for the detectionCount property.
    */
    public function setDetectionCount(?int $value ): void {
        $this->detectionCount = $value;
    }

    /**
     * Sets the deviceDeleted property value. A flag indicating whether the device has been deleted. Optional. Read-only.
     *  @param bool|null $value Value to set for the deviceDeleted property.
    */
    public function setDeviceDeleted(?bool $value ): void {
        $this->deviceDeleted = $value;
    }

    /**
     * Sets the initialDetectionDateTime property value. The date and time the piece of malware was initially detected. Optional. Read-only.
     *  @param DateTime|null $value Value to set for the initialDetectionDateTime property.
    */
    public function setInitialDetectionDateTime(?DateTime $value ): void {
        $this->initialDetectionDateTime = $value;
    }

    /**
     * Sets the lastRefreshedDateTime property value. Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
     *  @param DateTime|null $value Value to set for the lastRefreshedDateTime property.
    */
    public function setLastRefreshedDateTime(?DateTime $value ): void {
        $this->lastRefreshedDateTime = $value;
    }

    /**
     * Sets the lastStateChangeDateTime property value. The date and time the malware state was last changed. Optional. Read-only.
     *  @param DateTime|null $value Value to set for the lastStateChangeDateTime property.
    */
    public function setLastStateChangeDateTime(?DateTime $value ): void {
        $this->lastStateChangeDateTime = $value;
    }

    /**
     * Sets the malwareCategory property value. The category for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareCategory property.
    */
    public function setMalwareCategory(?string $value ): void {
        $this->malwareCategory = $value;
    }

    /**
     * Sets the malwareDisplayName property value. The display name for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareDisplayName property.
    */
    public function setMalwareDisplayName(?string $value ): void {
        $this->malwareDisplayName = $value;
    }

    /**
     * Sets the malwareExecutionState property value. The execution state for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareExecutionState property.
    */
    public function setMalwareExecutionState(?string $value ): void {
        $this->malwareExecutionState = $value;
    }

    /**
     * Sets the malwareId property value. The unique identifier for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareId property.
    */
    public function setMalwareId(?string $value ): void {
        $this->malwareId = $value;
    }

    /**
     * Sets the malwareSeverity property value. The severity for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareSeverity property.
    */
    public function setMalwareSeverity(?string $value ): void {
        $this->malwareSeverity = $value;
    }

    /**
     * Sets the malwareThreatState property value. The threat state for the detected malware. Optional. Read-only.
     *  @param string|null $value Value to set for the malwareThreatState property.
    */
    public function setMalwareThreatState(?string $value ): void {
        $this->malwareThreatState = $value;
    }

    /**
     * Sets the managedDeviceId property value. The identifier for the managed device where the malware was detected. Optional. Read-only.
     *  @param string|null $value Value to set for the managedDeviceId property.
    */
    public function setManagedDeviceId(?string $value ): void {
        $this->managedDeviceId = $value;
    }

    /**
     * Sets the managedDeviceName property value. The display name for the managed device where the malware was detected. Optional. Read-only.
     *  @param string|null $value Value to set for the managedDeviceName property.
    */
    public function setManagedDeviceName(?string $value ): void {
        $this->managedDeviceName = $value;
    }

    /**
     * Sets the tenantDisplayName property value. The display name for the managed tenant. Optional. Read-only.
     *  @param string|null $value Value to set for the tenantDisplayName property.
    */
    public function setTenantDisplayName(?string $value ): void {
        $this->tenantDisplayName = $value;
    }

    /**
     * Sets the tenantId property value. The Azure Active Directory tenant identifier for the managed tenant. Optional. Read-only.
     *  @param string|null $value Value to set for the tenantId property.
    */
    public function setTenantId(?string $value ): void {
        $this->tenantId = $value;
    }

}
