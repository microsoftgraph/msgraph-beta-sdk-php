<?php

namespace Microsoft\Graph\Beta\Generated\Models;

use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class AppVulnerabilityTask extends DeviceAppManagementTask implements Parsable 
{
    /**
     * Instantiates a new AppVulnerabilityTask and sets the default values.
    */
    public function __construct() {
        parent::__construct();
        $this->setOdataType('#microsoft.graph.appVulnerabilityTask');
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return AppVulnerabilityTask
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): AppVulnerabilityTask {
        return new AppVulnerabilityTask();
    }

    /**
     * Gets the appName property value. The app name.
     * @return string|null
    */
    public function getAppName(): ?string {
        return $this->getBackingStore()->get('appName');
    }

    /**
     * Gets the appPublisher property value. The app publisher.
     * @return string|null
    */
    public function getAppPublisher(): ?string {
        return $this->getBackingStore()->get('appPublisher');
    }

    /**
     * Gets the appVersion property value. The app version.
     * @return string|null
    */
    public function getAppVersion(): ?string {
        return $this->getBackingStore()->get('appVersion');
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return array_merge(parent::getFieldDeserializers(), [
            'appName' => fn(ParseNode $n) => $o->setAppName($n->getStringValue()),
            'appPublisher' => fn(ParseNode $n) => $o->setAppPublisher($n->getStringValue()),
            'appVersion' => fn(ParseNode $n) => $o->setAppVersion($n->getStringValue()),
            'insights' => fn(ParseNode $n) => $o->setInsights($n->getStringValue()),
            'managedDeviceCount' => fn(ParseNode $n) => $o->setManagedDeviceCount($n->getIntegerValue()),
            'managedDevices' => fn(ParseNode $n) => $o->setManagedDevices($n->getCollectionOfObjectValues([AppVulnerabilityManagedDevice::class, 'createFromDiscriminatorValue'])),
            'mitigationType' => fn(ParseNode $n) => $o->setMitigationType($n->getEnumValue(AppVulnerabilityTaskMitigationType::class)),
            'mobileAppCount' => fn(ParseNode $n) => $o->setMobileAppCount($n->getIntegerValue()),
            'mobileApps' => fn(ParseNode $n) => $o->setMobileApps($n->getCollectionOfObjectValues([AppVulnerabilityMobileApp::class, 'createFromDiscriminatorValue'])),
            'remediation' => fn(ParseNode $n) => $o->setRemediation($n->getStringValue()),
        ]);
    }

    /**
     * Gets the insights property value. Information about the mitigation.
     * @return string|null
    */
    public function getInsights(): ?string {
        return $this->getBackingStore()->get('insights');
    }

    /**
     * Gets the managedDeviceCount property value. The number of vulnerable devices.
     * @return int|null
    */
    public function getManagedDeviceCount(): ?int {
        return $this->getBackingStore()->get('managedDeviceCount');
    }

    /**
     * Gets the managedDevices property value. The vulnerable managed devices.
     * @return array<AppVulnerabilityManagedDevice>|null
    */
    public function getManagedDevices(): ?array {
        return $this->getBackingStore()->get('managedDevices');
    }

    /**
     * Gets the mitigationType property value. Device app management task mitigation type.
     * @return AppVulnerabilityTaskMitigationType|null
    */
    public function getMitigationType(): ?AppVulnerabilityTaskMitigationType {
        return $this->getBackingStore()->get('mitigationType');
    }

    /**
     * Gets the mobileAppCount property value. The number of vulnerable mobile apps.
     * @return int|null
    */
    public function getMobileAppCount(): ?int {
        return $this->getBackingStore()->get('mobileAppCount');
    }

    /**
     * Gets the mobileApps property value. The vulnerable mobile apps.
     * @return array<AppVulnerabilityMobileApp>|null
    */
    public function getMobileApps(): ?array {
        return $this->getBackingStore()->get('mobileApps');
    }

    /**
     * Gets the remediation property value. The remediation steps.
     * @return string|null
    */
    public function getRemediation(): ?string {
        return $this->getBackingStore()->get('remediation');
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        parent::serialize($writer);
        $writer->writeStringValue('appName', $this->getAppName());
        $writer->writeStringValue('appPublisher', $this->getAppPublisher());
        $writer->writeStringValue('appVersion', $this->getAppVersion());
        $writer->writeStringValue('insights', $this->getInsights());
        $writer->writeIntegerValue('managedDeviceCount', $this->getManagedDeviceCount());
        $writer->writeCollectionOfObjectValues('managedDevices', $this->getManagedDevices());
        $writer->writeEnumValue('mitigationType', $this->getMitigationType());
        $writer->writeIntegerValue('mobileAppCount', $this->getMobileAppCount());
        $writer->writeCollectionOfObjectValues('mobileApps', $this->getMobileApps());
        $writer->writeStringValue('remediation', $this->getRemediation());
    }

    /**
     * Sets the appName property value. The app name.
     * @param string|null $value Value to set for the appName property.
    */
    public function setAppName(?string $value): void {
        $this->getBackingStore()->set('appName', $value);
    }

    /**
     * Sets the appPublisher property value. The app publisher.
     * @param string|null $value Value to set for the appPublisher property.
    */
    public function setAppPublisher(?string $value): void {
        $this->getBackingStore()->set('appPublisher', $value);
    }

    /**
     * Sets the appVersion property value. The app version.
     * @param string|null $value Value to set for the appVersion property.
    */
    public function setAppVersion(?string $value): void {
        $this->getBackingStore()->set('appVersion', $value);
    }

    /**
     * Sets the insights property value. Information about the mitigation.
     * @param string|null $value Value to set for the insights property.
    */
    public function setInsights(?string $value): void {
        $this->getBackingStore()->set('insights', $value);
    }

    /**
     * Sets the managedDeviceCount property value. The number of vulnerable devices.
     * @param int|null $value Value to set for the managedDeviceCount property.
    */
    public function setManagedDeviceCount(?int $value): void {
        $this->getBackingStore()->set('managedDeviceCount', $value);
    }

    /**
     * Sets the managedDevices property value. The vulnerable managed devices.
     * @param array<AppVulnerabilityManagedDevice>|null $value Value to set for the managedDevices property.
    */
    public function setManagedDevices(?array $value): void {
        $this->getBackingStore()->set('managedDevices', $value);
    }

    /**
     * Sets the mitigationType property value. Device app management task mitigation type.
     * @param AppVulnerabilityTaskMitigationType|null $value Value to set for the mitigationType property.
    */
    public function setMitigationType(?AppVulnerabilityTaskMitigationType $value): void {
        $this->getBackingStore()->set('mitigationType', $value);
    }

    /**
     * Sets the mobileAppCount property value. The number of vulnerable mobile apps.
     * @param int|null $value Value to set for the mobileAppCount property.
    */
    public function setMobileAppCount(?int $value): void {
        $this->getBackingStore()->set('mobileAppCount', $value);
    }

    /**
     * Sets the mobileApps property value. The vulnerable mobile apps.
     * @param array<AppVulnerabilityMobileApp>|null $value Value to set for the mobileApps property.
    */
    public function setMobileApps(?array $value): void {
        $this->getBackingStore()->set('mobileApps', $value);
    }

    /**
     * Sets the remediation property value. The remediation steps.
     * @param string|null $value Value to set for the remediation property.
    */
    public function setRemediation(?string $value): void {
        $this->getBackingStore()->set('remediation', $value);
    }

}
